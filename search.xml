<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[H5开发手记5-列表DEMO]]></title>
      <url>http://yoursite.com/2016/11/22/H5%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B05-%E5%88%97%E8%A1%A8DEMO/</url>
      <content type="html"><![CDATA[<h2 id="list-css"><a href="#list-css" class="headerlink" title="list.css"></a>list.css</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line">body&#123;</div><div class="line">	margin: 0px;</div><div class="line">&#125;</div><div class="line">.bannerView&#123;// 顶部视图设置</div><div class="line">	width: 100%;</div><div class="line">	background-position: top center; </div><div class="line">	background-color: orange;</div><div class="line">&#125;</div><div class="line">.bannerView img&#123;// 顶部视图图片设置</div><div class="line">	width: 100%;</div><div class="line">	margin: auto;</div><div class="line">&#125;</div><div class="line">.viewBrief&#123;// 缩略图设置</div><div class="line">	background:#d8d8d8;</div><div class="line">	width:160px;</div><div class="line">	height: 160px;</div><div class="line">	margin-left: 30px;</div><div class="line">	margin-top: 20px;</div><div class="line">	margin-bottom: 20px;</div><div class="line">&#125;</div><div class="line">.titleHeader&#123;// 标题文字设置</div><div class="line">	font-size:28px;</div><div class="line">	color:#666666;</div><div class="line">	text-align:left;</div><div class="line">	height: 28px;</div><div class="line">	overflow: hidden;</div><div class="line">	padding-top: 20px;</div><div class="line">	padding-left: 30px;</div><div class="line">	margin: 0px;</div><div class="line">&#125;</div><div class="line">.titleBrief&#123;// 简介文字设置</div><div class="line">	font-size:24px;</div><div class="line">	color:#9b9b9b;</div><div class="line">	letter-spacing:-1.15px;</div><div class="line">	line-height:28px;</div><div class="line">	text-align:left;</div><div class="line">	height: 56px;</div><div class="line">	overflow: hidden;</div><div class="line">	padding-top: 15px;</div><div class="line">	padding-left: 30px;</div><div class="line">	margin: 0px;</div><div class="line">&#125;</div><div class="line">.titleSource&#123;// 文字来源设置</div><div class="line">	font-size:20px;</div><div class="line">	color:#5cccff;</div><div class="line">	letter-spacing:-1.11px;					/*字符间隔*/</div><div class="line">	text-indent: 31px;						/*文本缩进*/</div><div class="line">	line-height: 32px;						/*行高*/</div><div class="line">	background-image: url(../img/Page1.png);	/*背景图片设置*/</div><div class="line">	background-repeat: no-repeat;</div><div class="line">	background-position-x: 15px;</div><div class="line">	background-position-y: center;</div><div class="line">	border:1px solid #5cccff;				/*边框设置*/</div><div class="line">	border-radius:100px;</div><div class="line">	margin: 0px 0px 0px 220px;				/*位置*/</div><div class="line">	width: 120px;</div><div class="line">	height: 30px;</div><div class="line">&#125;</div><div class="line">.titleTimer&#123;// 时间设置</div><div class="line">	font-size:22px;</div><div class="line">	color:#d8d8d8;</div><div class="line">	margin: -24px -20px 0px 850px;</div><div class="line">	width: 113px;</div><div class="line">	height: 30px</div><div class="line">&#125;</div><div class="line">.lineHorizontal&#123;// 水平线设置</div><div class="line">	color:#eeeeee;</div><div class="line">	width:100%;</div><div class="line">	size:1px;</div><div class="line">&#125;</div><div class="line">// 去除下划线</div><div class="line">a&#123;</div><div class="line">	text-decoration: none;</div><div class="line">&#125;</div><div class="line">a:hover&#123;</div><div class="line">	color: #3366CC;</div><div class="line">	text-decoration: underline;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="list-js"><a href="#list-js" class="headerlink" title="list.js"></a>list.js</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">function mainLinks(obj) &#123;</div><div class="line">	//	alert(&quot;js代码实现&quot;);</div><div class="line">	window.location.href = &apos;obj&apos;;</div><div class="line">&#125;</div><div class="line">(function () &#123;</div><div class="line">	var str = &apos;&#123;&quot;results&quot;:[&#123;&quot;title”:”列表1标题”,”img&quot;:&quot;http://img2.3lian.com/2014/c7/12/d/77.jpg&quot;,&quot;click&quot;:&quot;http://gnhxsk.cn”,”abstract”:”列表简介”,”from&quot;:&quot;self&quot;,&quot;date&quot;:&quot;2016-09-26&quot;&#125;,&#123;&quot;title&quot;:&quot;列表2标题&quot;,&quot;img&quot;:&quot;http://img2.3lian.com/2014/c7/12/d/77.jpg&quot;,&quot;click&quot;:&quot;http://gnhxsk.cn&quot;,&quot;abstract&quot;:&quot;列表简介&quot;,&quot;from&quot;:&quot;self&quot;,&quot;date&quot;:&quot;2016-09-23&quot;&#125;,&#123;&quot;title&quot;:&quot;列表3标题&quot;,&quot;img&quot;:&quot;http://img2.3lian.com/2014/c7/12/d/77.jpg&quot;,&quot;click&quot;:&quot;http://gnhxsk.cn&quot;,&quot;abstract&quot;:&quot;列表简介&quot;,&quot;from&quot;:&quot;self&quot;,&quot;date&quot;:&quot;2016-09-21&quot;&#125;,&#123;&quot;title&quot;:&quot;列表4标题&quot;,&quot;img&quot;:&quot;http://img2.3lian.com/2014/c7/12/d/77.jpg&quot;,&quot;click&quot;:&quot;http://gnhxsk.cn&quot;,&quot;abstract&quot;:&quot;列表简介&quot;,&quot;from&quot;:&quot;self&quot;,&quot;date&quot;:&quot;2016-09-21&quot;&#125;,&#123;&quot;title&quot;:&quot;列表5标题&quot;,&quot;img&quot;:&quot;http://img2.3lian.com/2014/c7/12/d/77.jpg&quot;,&quot;click&quot;:&quot;http://gnhxsk.cn&quot;,&quot;abstract&quot;:&quot;列表简介&quot;,&quot;from&quot;:&quot;self&quot;,&quot;date&quot;:&quot;2016-09-09&quot;&#125;,&#123;&quot;title&quot;:&quot;列表9标题&quot;,&quot;img&quot;:&quot;http://img2.3lian.com/2014/c7/12/d/77.jpg&quot;,&quot;click&quot;:&quot;http://gnhxsk.cn&quot;,&quot;abstract&quot;:&quot;列表简介&quot;,&quot;from&quot;:&quot;self&quot;,&quot;date&quot;:&quot;2016-09-07&quot;&#125;,&#123;&quot;title&quot;:&quot;列表6标题&quot;,&quot;img&quot;:&quot;http://img2.3lian.com/2014/c7/12/d/77.jpg&quot;,&quot;click&quot;:&quot;http://gnhxsk.cn&quot;,&quot;abstract&quot;:&quot;列表简介&quot;,&quot;from&quot;:&quot;self&quot;,&quot;date&quot;:&quot;2016/08/30&quot;&#125;,&#123;&quot;title&quot;:&quot;列表7标题&quot;,&quot;img&quot;:&quot;http://img2.3lian.com/2014/c7/12/d/77.jpg&quot;,&quot;click&quot;:&quot;http://gnhxsk.cn&quot;,&quot;abstract&quot;:&quot;列表简介&quot;,&quot;from&quot;:&quot;self&quot;,&quot;date&quot;:&quot;2016-08-23&quot;&#125;,&#123;&quot;title&quot;:&quot;列表8标题&quot;,&quot;img&quot;:&quot;http://img2.3lian.com/2014/c7/12/d/77.jpg&quot;,&quot;click&quot;:&quot;http://gnhxsk.cn&quot;,&quot;abstract&quot;:&quot;列表简介&quot;,&quot;from&quot;:&quot;self&quot;,&quot;date&quot;:&quot;2016-08-11&quot;&#125;]&#125;&apos;;</div><div class="line">	var obj = eval(&apos;(&apos; + str + &apos;)&apos;);</div><div class="line">	for (var i = 0 ; i &lt; obj.results.length;i ++) &#123;</div><div class="line">		var elementData = obj.results[i];				/*获取json中的第i个数据*/</div><div class="line">		</div><div class="line">		var para = document.createElement(&quot;div&quot;);		/*创建一个元素*/</div><div class="line">		para.id = &apos;post&apos; + i;</div><div class="line">		para.click = elementData.click;</div><div class="line">		para.onclick = function()&#123;window.location.href = this.click&#125;;</div><div class="line">		</div><div class="line">//		var li = document.createElement(&apos;a&apos;);</div><div class="line">//		li.href = elementData.click;</div><div class="line">//		li.appendChild(para);</div><div class="line">		</div><div class="line">		var img = document.createElement(&quot;img&quot;);</div><div class="line">		img.className = &apos;viewBrief&apos;;</div><div class="line">		img.align = &apos;left&apos;;</div><div class="line">		img.src = elementData.img;</div><div class="line">		para.appendChild(img);</div><div class="line">		</div><div class="line">		var div1 = document.createElement(&apos;div&apos;);</div><div class="line">		div1.id = &apos;content&apos; + i;</div><div class="line">		var p1 = document.createElement(&apos;p&apos;);</div><div class="line">		p1.className = &apos;titleHeader&apos;;</div><div class="line">		var node1 = document.createTextNode(elementData.title);</div><div class="line">		p1.appendChild(node1)</div><div class="line">		var p2 = document.createElement(&apos;p&apos;);</div><div class="line">		p2.className = &apos;titleBrief&apos;;</div><div class="line">		var node2 = document.createTextNode(elementData.abstract);</div><div class="line">		p2.appendChild(node2);</div><div class="line">		div1.appendChild(p1);</div><div class="line">		div1.appendChild(p2);</div><div class="line">		</div><div class="line">		var div2 = document.createElement(&apos;div&apos;);</div><div class="line">		div2.id = &apos;view&apos; + i;</div><div class="line">		div2.style = &quot;height: 40px ; margin: 30px 30px 0px 10px;&quot;;</div><div class="line">		var titleSource = document.createElement(&apos;div&apos;);</div><div class="line">		titleSource.className = &apos;titleSource&apos;;</div><div class="line">		var source = document.createTextNode(elementData.from);</div><div class="line">		titleSource.appendChild(source);</div><div class="line">		var titleTimer = document.createElement(&apos;div&apos;);</div><div class="line">		titleTimer.className = &apos;titleTimer&apos;;</div><div class="line">		var timer = document.createTextNode(elementData.date);</div><div class="line">		titleTimer.appendChild(timer);</div><div class="line">		div2.appendChild(titleSource);</div><div class="line">		div2.appendChild(titleTimer);</div><div class="line">		div1.appendChild(div2);</div><div class="line">		</div><div class="line">		var lines = document.createElement(&apos;hr&apos;);</div><div class="line">		lines.className = &apos;lineHorizontal&apos;;</div><div class="line">		div1.appendChild(lines);</div><div class="line">		para.appendChild(div1);</div><div class="line">		</div><div class="line">		var element1 = document.getElementById(&quot;content&quot;);	/*找到一个已有的元素*/</div><div class="line">		element1.appendChild(para);							/*向这个已有的元素追加新元素*/</div><div class="line">	&#125;</div><div class="line">&#125;)();</div></pre></td></tr></table></figure>
<h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">	&lt;head&gt;</div><div class="line">		&lt;meta charset=&quot;utf-8&quot; /&gt;</div><div class="line">		&lt;title&gt;营销风尚&lt;/title&gt;</div><div class="line">		&lt;link rel=&quot;stylesheet&quot; href=&quot;css/list.css&quot; /&gt;</div><div class="line">		</div><div class="line">		&lt;!--&lt;style type=&quot;text/css&quot;&gt;</div><div class="line">			body&#123;/*屏幕宽度小于400px*/</div><div class="line">				min-height: 100%;</div><div class="line">				background-color: #5cccff;</div><div class="line">			&#125;</div><div class="line">			@media only screen and (min-width: 400px) &#123;</div><div class="line">				body&#123;</div><div class="line">					min-height: 100%;</div><div class="line">					background-color: #eeeeee;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&lt;/style&gt;--&gt;</div><div class="line">		</div><div class="line">	&lt;/head&gt;</div><div class="line">	&lt;body&gt;</div><div class="line">		&lt;div class=&quot;bannerView&quot;&gt;</div><div class="line">			&lt;img src=&quot;img/banner720.png&quot;/&gt;</div><div class="line">		&lt;/div&gt;</div><div class="line">		&lt;div id=&quot;content&quot;&gt;</div><div class="line">			&lt;script src=&quot;js/list.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</div><div class="line">		&lt;/div&gt;</div><div class="line">	&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[H5开发手记4-函数]]></title>
      <url>http://yoursite.com/2016/11/22/H5%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B04-%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>1.(function () {</p>
<p>})();<br>这种情况下，只要是引用.js文件就会调用该方法。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[H5开发手记3-HTML页面跳转]]></title>
      <url>http://yoursite.com/2016/11/22/H5%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B03-HTML%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC/</url>
      <content type="html"><![CDATA[<h2 id="1-HTML实现"><a href="#1-HTML实现" class="headerlink" title="1.HTML实现"></a>1.HTML实现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;head&gt;</div><div class="line">&lt;!-- 以下方式只是刷新不跳转到其他页面 --&gt;</div><div class="line">&lt;meta http-equiv=&quot;refresh&quot; content=&quot;10&quot;&gt;</div><div class="line">&lt;!-- 以下方式定时转到其他页面 --&gt;</div><div class="line">&lt;meta http-equiv=&quot;refresh&quot; content=&quot;5;url=hello.html&quot;&gt; </div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure>
<p>优点：简单<br>缺点：Struts Tiles中无法使用</p>
<h2 id="2-JavaScript实现"><a href="#2-JavaScript实现" class="headerlink" title="2.JavaScript实现"></a>2.JavaScript实现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&gt; </div><div class="line">// 以下方式直接跳转</div><div class="line">window.location.href=&apos;hello.html&apos;;</div><div class="line">// 以下方式定时跳转</div><div class="line">setTimeout(&quot;javascript:location.href=&apos;hello.html&apos;&quot;, 5000); </div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>优点：灵活，可以结合更多的其他功能<br>缺点：受到不同浏览器的影响</p>
<h2 id="3-结合了倒数的javascript实现（IE）"><a href="#3-结合了倒数的javascript实现（IE）" class="headerlink" title="3.结合了倒数的javascript实现（IE）"></a>3.结合了倒数的javascript实现（IE）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;span id=&quot;totalSecond&quot;&gt;5&lt;/span&gt;</div><div class="line">&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&gt; </div><div class="line">var second = totalSecond.innerText; </div><div class="line">setInterval(&quot;redirect()&quot;, 1000); </div><div class="line">function redirect()&#123; </div><div class="line">totalSecond.innerText=--second; </div><div class="line">if(second&lt;0) location.href=&apos;hello.html&apos;; </div><div class="line">&#125; </div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>优点：更人性化<br>缺点：firefox不支持（firefox不支持span、div等的innerText属性）</p>
<h2 id="4-结合了倒数的javascript实现（firefox）"><a href="#4-结合了倒数的javascript实现（firefox）" class="headerlink" title="4.结合了倒数的javascript实现（firefox）"></a>4.结合了倒数的javascript实现（firefox）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&gt; </div><div class="line">var second = document.getElementById(&apos;totalSecond&apos;).textContent; </div><div class="line">setInterval(&quot;redirect()&quot;, 1000); </div><div class="line">function redirect() </div><div class="line">&#123; </div><div class="line">document.getElementById(&apos;totalSecond&apos;).textContent = --second; </div><div class="line">if (second &lt; 0) location.href = &apos;hello.html&apos;; </div><div class="line">&#125; </div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h2 id="5-解决Firefox不支持innerText的问题"><a href="#5-解决Firefox不支持innerText的问题" class="headerlink" title="5.解决Firefox不支持innerText的问题"></a>5.解决Firefox不支持innerText的问题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;span id=&quot;totalSecond&quot;&gt;5&lt;/span&gt;</div><div class="line">&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&gt; </div><div class="line">if(navigator.appName.indexOf(&quot;Explorer&quot;) &gt; -1)&#123; </div><div class="line">document.getElementById(&apos;totalSecond&apos;).innerText = &quot;my text innerText&quot;; </div><div class="line">&#125; else&#123; </div><div class="line">document.getElementById(&apos;totalSecond&apos;).textContent = &quot;my text textContent&quot;; </div><div class="line">&#125; </div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h2 id="6-整合3和4"><a href="#6-整合3和4" class="headerlink" title="6.整合3和4"></a>6.整合3和4</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;span id=&quot;totalSecond&quot;&gt;5&lt;/span&gt;</div><div class="line"> </div><div class="line">&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&gt; </div><div class="line">var second = document.getElementById(&apos;totalSecond&apos;).textContent; </div><div class="line"> </div><div class="line">if (navigator.appName.indexOf(&quot;Explorer&quot;) &gt; -1)  &#123; </div><div class="line">    second = document.getElementById(&apos;totalSecond&apos;).innerText; </div><div class="line">&#125; else &#123; </div><div class="line">    second = document.getElementById(&apos;totalSecond&apos;).textContent; </div><div class="line">&#125; </div><div class="line"> </div><div class="line">setInterval(&quot;redirect()&quot;, 1000); </div><div class="line">function redirect() &#123; </div><div class="line">if (second &lt; 0) &#123; </div><div class="line">    location.href = &apos;hello.html&apos;; </div><div class="line">&#125; else &#123; </div><div class="line">    if (navigator.appName.indexOf(&quot;Explorer&quot;) &gt; -1) &#123; </div><div class="line">        document.getElementById(&apos;totalSecond&apos;).innerText = second--; </div><div class="line">    &#125; else &#123; </div><div class="line">        document.getElementById(&apos;totalSecond&apos;).textContent = second--; </div><div class="line">    &#125; </div><div class="line">&#125; </div><div class="line">&#125; </div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<h2 id="7-通过href简单实现点击a链接跳到页面中指定的地方"><a href="#7-通过href简单实现点击a链接跳到页面中指定的地方" class="headerlink" title="7.通过href简单实现点击a链接跳到页面中指定的地方"></a>7.通过href简单实现点击a链接跳到页面中指定的地方</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;#jump&quot;&gt;点我看看&lt;/a&gt; </div><div class="line">&lt;p id=“jump”&gt;我是该区域的相应内容&lt;/p&gt;</div></pre></td></tr></table></figure>
<p>若跳到其它页面相应的地方，只需在href中#jump的前面加上链接地址即可，即：<a href="链接地址#jump">点我看看</a> </p>
<h4 id="参考文章：1-http-www-cnblogs-com-aszx0413-articles-1886819-html"><a href="#参考文章：1-http-www-cnblogs-com-aszx0413-articles-1886819-html" class="headerlink" title="参考文章：1.http://www.cnblogs.com/aszx0413/articles/1886819.html"></a>参考文章：1.<a href="http://www.cnblogs.com/aszx0413/articles/1886819.html" target="_blank" rel="external">http://www.cnblogs.com/aszx0413/articles/1886819.html</a></h4>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[H5开发手记2-eval]]></title>
      <url>http://yoursite.com/2016/11/22/H5%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B02/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> var c = 1; //全局变量</div><div class="line"></div><div class="line">var jsonstr1 = &apos;&#123;&quot;name&quot;:&quot;a&quot;,&quot;company&quot;:&quot;b&quot;,&quot;value&quot;:++c&#125;&apos;;</div><div class="line">  </div><div class="line">var json1 = eval(&apos;(&apos; + jsonstr1 + &apos;)&apos;);</div><div class="line">   </div><div class="line">console.log(json1.value);</div></pre></td></tr></table></figure>
<p>0.eval函数会评估一个给定的含有JavaScript代码的字符串，并且试图去执行包含在字符串里的表达式或者一系列的合法的JavaScript语句。eval函数会把最后一个表达式或者语句所包含的值或引用作为返回值。<br>1.C是全局变量，c=1，但是经过eval的解析，全局变量变成2了。<br>2.eval()相当于一个执行环境，当不加括号的时候，jsonstr1会被认为是一条符合语句。运行的时候就会逐个字符的解析。但是加上括号的时候，jsonstr1就会当做一个表达式去运算。从括号开始就被当做了对象进行识别。<br>3.对于服务器返回的JSON字符串，如果没有做类型说明，或者以字符串方式接受，需要做一次对象化处理。例如：将该字符串放于eval()中执行一次。【将JSON字符串转换成JSON数据格式】<br>4.eval在这里添加(‘(‘+ data +’)’)<br>eval本身的问题。由于json是以“{}”的方式来开始以及结束的，在JS中，它会被当做一个语句块来处理，所以必须强制性的将它转换成一种表达式。<br>加上圆括号的目的是迫使eval函数在处理JavaScript代码的时候强制将括号内的表达式(expression)转换为对象，而不是作为语句(statement)来执行。例如：对象字面量{}，如若不外加层的括号，那么eval会将大括号识别为JavaScript代码块的开始合结束标记，那么{}将会被认为是执行了一句空语句。<br>5.eval函数接收一个参数s，如果s不是字符串，则直接返回s。<br>6.如果jsonstr1是对象，那么eval（）函数转换或者多次转换后，还是对象。<br>7.在js的json代码中的字符串中不能进行换行，如果换行的话需要这样：<br>例如：<br>‘asdfghjkl’<br>‘asd’+’fghjkl’</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[H5开发手记1-学习网站]]></title>
      <url>http://yoursite.com/2016/11/22/H5%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B01-%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/</url>
      <content type="html"><![CDATA[<h2 id="1-w3school"><a href="#1-w3school" class="headerlink" title="1.w3school"></a>1.w3school</h2><p><a href="http://www.w3school.com.cn" target="_blank" rel="external">http://www.w3school.com.cn</a></p>
<h2 id="2-Bootsstrap"><a href="#2-Bootsstrap" class="headerlink" title="2.Bootsstrap"></a>2.Bootsstrap</h2><p><a href="http://getbootstrap.com" target="_blank" rel="external">http://getbootstrap.com</a></p>
<h2 id="3-Less"><a href="#3-Less" class="headerlink" title="3.Less"></a>3.Less</h2><p><a href="http://lesscss.cn" target="_blank" rel="external">http://lesscss.cn</a></p>
<h2 id="4-H5之家"><a href="#4-H5之家" class="headerlink" title="4.H5之家"></a>4.H5之家</h2><p><a href="http://www.h5cn.com" target="_blank" rel="external">http://www.h5cn.com</a></p>
<h2 id="5-js代码库"><a href="#5-js代码库" class="headerlink" title="5.js代码库"></a>5.js代码库</h2><p><a href="http://www.js-css.cn" target="_blank" rel="external">http://www.js-css.cn</a></p>
<h2 id="6-开源代码"><a href="#6-开源代码" class="headerlink" title="6.开源代码"></a>6.开源代码</h2><p><a href="https://github.com/dcloudio/casecode" target="_blank" rel="external">https://github.com/dcloudio/casecode</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记31-日期判断]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B031-%E6%97%A5%E6%9C%9F%E5%88%A4%E6%96%AD/</url>
      <content type="html"><![CDATA[<p>## </p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记30-网络请求封装]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B030-%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E5%B0%81%E8%A3%85/</url>
      <content type="html"><![CDATA[<h2 id="SKNetworkRequest-h"><a href="#SKNetworkRequest-h" class="headerlink" title="SKNetworkRequest.h"></a>SKNetworkRequest.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line"></div><div class="line">typedef NS_ENUM(NSUInteger, requestType) &#123;</div><div class="line">    GET,</div><div class="line">    POST,</div><div class="line">&#125;;</div><div class="line"></div><div class="line">typedef void(^successedBlock)(id data);</div><div class="line">typedef void(^failedBlocK)(NSError *error);</div><div class="line"></div><div class="line">@interface SKNetworkRequest : NSObject</div><div class="line"></div><div class="line">+ (id)shareManager;</div><div class="line"></div><div class="line"></div><div class="line">/**</div><div class="line"> 网络请求</div><div class="line"></div><div class="line"> @param type         请求方式</div><div class="line"> @param urlString    URL</div><div class="line"> @param param        请求参数</div><div class="line"> @param successBlock 成功回调</div><div class="line"> @param failBlock    失败回调</div><div class="line"> */</div><div class="line">+ (void)networkRequestType:(requestType)type urlString:(NSString *)urlString Param:(NSDictionary *)param successed:(successedBlock)successBlock failed:(failedBlocK)failBlock;</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="SKNetworkRequest-m"><a href="#SKNetworkRequest-m" class="headerlink" title="SKNetworkRequest.m"></a>SKNetworkRequest.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line">#import &quot;SKNetworkRequest.h&quot;</div><div class="line"></div><div class="line">@interface SKNetworkRequest ()</div><div class="line"></div><div class="line">@end</div><div class="line"></div><div class="line">@implementation SKNetworkRequest</div><div class="line"></div><div class="line">+ (id)shareManager&#123;</div><div class="line">    static dispatch_once_t onceToken;</div><div class="line">    static id instance;</div><div class="line">    dispatch_once(&amp;onceToken, ^&#123;</div><div class="line">        instance = [self new];</div><div class="line">    &#125;);</div><div class="line">    return instance;</div><div class="line">&#125;</div><div class="line"></div><div class="line">+ (void)networkRequestType:(requestType)type urlString:(NSString *)urlString Param:(NSDictionary *)param successed:(successedBlock)successBlock failed:(failedBlocK)failBlock&#123;</div><div class="line">    </div><div class="line">    switch (type) &#123;</div><div class="line">        case GET:&#123;</div><div class="line">            [[SKNetworkRequest shareManager] getWithUrlString:urlString param:param successed:successBlock failed:failBlock];</div><div class="line">            break;</div><div class="line">        &#125;</div><div class="line">        case POST:&#123;</div><div class="line">            [[SKNetworkRequest shareManager] postWithUrlString:urlString param:param successed:successBlock failed:failBlock];</div><div class="line">            break;</div><div class="line">        &#125;</div><div class="line">        default:</div><div class="line">            break;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#pragma mark -</div><div class="line">#pragma mark GET</div><div class="line">- (void)getWithUrlString:(NSString *)urlString param:(NSDictionary *)param successed:(successedBlock)successBlock failed:(failedBlocK)failBlock&#123;</div><div class="line">    NSURLSession *session = [NSURLSession sharedSession];</div><div class="line">    </div><div class="line">    NSString *url = [urlString stringByAddingPercentEncodingWithAllowedCharacters:[NSCharacterSet URLQueryAllowedCharacterSet]];</div><div class="line">    </div><div class="line">    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:url]];</div><div class="line">    request.HTTPMethod = @&quot;GET&quot;;</div><div class="line">    </div><div class="line">    NSURLSessionDataTask *task = [session dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) &#123;</div><div class="line">        if (data &amp;&amp; !error) &#123;</div><div class="line">            successBlock(data);</div><div class="line">        &#125;else&#123;</div><div class="line">            if (!data) &#123;</div><div class="line">                NSLog(@&quot;请求数据为空&quot;);</div><div class="line">            &#125;</div><div class="line">            if (error) &#123;</div><div class="line">                failBlock(error);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;];</div><div class="line">    </div><div class="line">    [task resume];</div><div class="line">&#125;</div><div class="line"></div><div class="line">#pragma mark -</div><div class="line">#pragma mark POST</div><div class="line">- (void)postWithUrlString:(NSString *)urlString param:(NSDictionary *)param successed:(successedBlock)successBlock failed:(failedBlocK)failBlock&#123;</div><div class="line">    // 转码，避免中文</div><div class="line">    urlString = [urlString stringByAddingPercentEncodingWithAllowedCharacters:[NSCharacterSet URLQueryAllowedCharacterSet]];</div><div class="line">    </div><div class="line">    NSURL *url= [NSURL URLWithString:urlString];</div><div class="line">    </div><div class="line">    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:url];</div><div class="line">    request.timeoutInterval = 5;// 超时</div><div class="line">    request.HTTPMethod = @&quot;POST&quot;;// 请求方式</div><div class="line">    NSData *data = [NSJSONSerialization dataWithJSONObject:param options:NSJSONWritingPrettyPrinted error:nil];</div><div class="line">    NSString *jsonString = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];</div><div class="line">    NSLog(@&quot;json:%@&quot;,jsonString);</div><div class="line">    request.HTTPBody = data;// 请求头</div><div class="line">    [request setValue:@&quot;application/json&quot; forHTTPHeaderField:@&quot;Content-Type&quot;];// 请求头类型</div><div class="line">    NSURLSession *session = [NSURLSession sharedSession];</div><div class="line">    NSURLSessionDataTask *task = [session dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) &#123;</div><div class="line">        NSLog(@&quot;%@&quot;,request);</div><div class="line">        NSLog(@&quot;%@&quot;,response);</div><div class="line">        if (nil == data || error) &#123;</div><div class="line">            failBlock(error);</div><div class="line">        &#125;else&#123;</div><div class="line">            if (data) &#123;</div><div class="line">                successBlock(data);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;];</div><div class="line">    [task resume];</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记29-获取地图经纬度]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B029-%E8%8E%B7%E5%8F%96%E5%9C%B0%E5%9B%BE%E7%BB%8F%E7%BA%AC%E5%BA%A6/</url>
      <content type="html"><![CDATA[<h2 id="SKLocation-h"><a href="#SKLocation-h" class="headerlink" title="SKLocation.h"></a>SKLocation.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line"></div><div class="line">@interface AdmixtureLocation : NSObject</div><div class="line">+ (instancetype)shareLocation;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="SKLocation-m"><a href="#SKLocation-m" class="headerlink" title="SKLocation.m"></a>SKLocation.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">#import &quot;SKLocation.h&quot;</div><div class="line">#import &lt;CoreLocation/CoreLocation.h&gt;</div><div class="line"></div><div class="line">@interface AdmixtureLocation ()&lt;CLLocationManagerDelegate&gt;</div><div class="line">@property (strong, nonatomic) CLLocationManager *manager;</div><div class="line"></div><div class="line">@end</div><div class="line"></div><div class="line">@implementation AdmixtureLocation</div><div class="line">+ (instancetype)shareLocation&#123;</div><div class="line">    static dispatch_once_t onceToken;</div><div class="line">    static id instance;</div><div class="line">    dispatch_once(&amp;onceToken, ^&#123;</div><div class="line">        instance = [[self alloc] init];</div><div class="line">    &#125;);</div><div class="line">    return instance;</div><div class="line">&#125;</div><div class="line">- (instancetype)init&#123;</div><div class="line">    if (self = [super init]) &#123;</div><div class="line">        _manager = [[CLLocationManager alloc] init];</div><div class="line">        [self startPosition];</div><div class="line">    &#125;</div><div class="line">    return self;</div><div class="line">&#125;</div><div class="line">- (void)startPosition&#123;</div><div class="line">    if (![CLLocationManager locationServicesEnabled]) &#123;</div><div class="line">        NSLog(@&quot;定位服务可能未打开，请设置&quot;);</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([CLLocationManager authorizationStatus] == kCLAuthorizationStatusNotDetermined) &#123;</div><div class="line">        [_manager requestWhenInUseAuthorization];</div><div class="line">    &#125;else if ([CLLocationManager authorizationStatus] == kCLAuthorizationStatusAuthorizedWhenInUse)&#123;</div><div class="line">        _manager.delegate = self;</div><div class="line">        _manager.desiredAccuracy = kCLLocationAccuracyBest;</div><div class="line">        CLLocationDistance distance = 10.f;</div><div class="line">        _manager.distanceFilter = distance;</div><div class="line">        [_manager startUpdatingLocation];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">- (void)locationManager:(CLLocationManager *)manager didUpdateLocations:(NSArray&lt;CLLocation *&gt; *)locations&#123;</div><div class="line">    CLLocation *location = [locations firstObject];</div><div class="line">    CLLocationCoordinate2D coordinate = location.coordinate;</div><div class="line">    NSLog(@&quot;lon:%lf lat:%lf&quot;,coordinate.longitude,coordinate.latitude);</div><div class="line">    [_manager stopUpdatingLocation];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记28-自定义日志打印格式]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B028-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%B0%E6%A0%BC%E5%BC%8F/</url>
      <content type="html"><![CDATA[<h2 id="SKLog-h"><a href="#SKLog-h" class="headerlink" title="SKLog.h"></a>SKLog.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line"></div><div class="line">typedef enum : NSUInteger &#123;</div><div class="line">    SKLogLevelNone   = 0,</div><div class="line">    SkLogLevelCrit   = 10,</div><div class="line">    SKLogLevelError  = 20,</div><div class="line">    SKLogLevelWarn   = 30,</div><div class="line">    SKLogLevelInfo   = 40,</div><div class="line">    SKLogLevelDebug  = 50,</div><div class="line">&#125; SkLogLevel;</div><div class="line"></div><div class="line">void SKLogSetLogLevel(SKLogLevel level);</div><div class="line"></div><div class="line">// 实际的函数名有下划线前缀，</div><div class="line">// 这样我们可以通过定义预处理宏，</div><div class="line">// 劫持SKLog*与其他功能测试</div><div class="line">void _SK_LogCrit(NSString *format, ...);</div><div class="line">void _SK_LogError(NSString *format, ...);</div><div class="line">void _SK_LogWarn(NSString *format, ...);</div><div class="line">void _SK_LogInfo(NSString *format, ...);</div><div class="line">void _SK_LogDebug(NSString *format, ...);</div><div class="line"></div><div class="line">#ifndef SKLogCrit</div><div class="line">#define SKLogCrit(...) _SK_LogCrit(__VA_ARGS__)</div><div class="line">#endif</div><div class="line"></div><div class="line">#ifndef SKLogError</div><div class="line">#define SKLogError(...) _SK_LogError(__VA_ARGS__)</div><div class="line">#endif</div><div class="line"></div><div class="line">#ifndef SKLogWarn</div><div class="line">#define SKLogWarn(...) _SK_LogWarn(__VA_ARGS__)</div><div class="line">#endif</div><div class="line"></div><div class="line">#ifndef SKLogInfo</div><div class="line">#define SKLogInfo(...) _SK_LogInfo(__VA_ARGS__)</div><div class="line">#endif</div><div class="line"></div><div class="line">#ifndef AMLogDebug</div><div class="line">#define AMLogDebug(...) _AMVLogDebug(__VA_ARGS__)</div><div class="line">#endif</div></pre></td></tr></table></figure>
<h2 id="SKLog-m"><a href="#SKLog-m" class="headerlink" title="SKLog.m"></a>SKLog.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">#import &quot;SKLog.h&quot;</div><div class="line"></div><div class="line">static SKLogLevel g_SKLogLevel = SKLogLevelInfo;</div><div class="line">#define SK_LOG_PREFIX @&quot;SK:&quot; // 定义前缀</div><div class="line"></div><div class="line">void _SK_LogSetLogLevel(SKLogLevel level)&#123;</div><div class="line">    g_SKLogLevel = level;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void _SK_LogCrit(NSString *format, ...)&#123;</div><div class="line">    if (g_SKLogLevel &lt; SKLogLevelCrit) &#123;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    va_list ap;</div><div class="line">    NSString *fmt_real = [SK_LOG_PREFIX stringByAppendingString:format];</div><div class="line">    va_start(ap, format);</div><div class="line">    NSLogv(fmt_real, ap);</div><div class="line">    va_end(ap);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void _SK_LogError(NSString *format, ...)&#123;</div><div class="line">    if (g_SKLogLevel &lt; SKLogLevelError) &#123;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    va_list ap;</div><div class="line">    NSString *fmt_real = [SK_LOG_PREFIX stringByAppendingString:format];</div><div class="line">    va_start(ap, format);</div><div class="line">    NSLogv(fmt_real, ap);</div><div class="line">    va_end(ap);</div><div class="line">    </div><div class="line">&#125;</div><div class="line">void _SK_LogWarn(NSString *format, ...)&#123;</div><div class="line">    if (g_SKLogLevel &lt; SKLogLevelWarn) &#123;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    va_list ap;</div><div class="line">    NSString *fmt_real = [SK_LOG_PREFIX stringByAppendingString:format];</div><div class="line">    va_start(ap, format);</div><div class="line">    NSLogv(fmt_real, ap);</div><div class="line">    va_end(ap);</div><div class="line">    </div><div class="line">&#125;</div><div class="line">void _SK_LogInfo(NSString *format, ...)&#123;</div><div class="line">    if (g_SKLogLevel &lt; SKLogLevelInfo) &#123;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    va_list ap;</div><div class="line">    NSString *fmt_real = [SK_LOG_PREFIX stringByAppendingString:format];</div><div class="line">    va_start(ap, format);</div><div class="line">    NSLogv(fmt_real, ap);</div><div class="line">    va_end(ap);</div><div class="line">&#125;</div><div class="line">void _SK_LogDebug(NSString *format, ...)&#123;</div><div class="line">    if (g_SKLogLevel &lt; SKLogLevelDebug) &#123;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    va_list ap;</div><div class="line">    NSString *fmt_real = [SK_LOG_PREFIX stringByAppendingString:format];</div><div class="line">    va_start(ap, format);</div><div class="line">    NSLogv(fmt_real, ap);</div><div class="line">    va_end(ap);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记27-获取任意控制器的导航控制器]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B027-%E8%8E%B7%E5%8F%96%E4%BB%BB%E6%84%8F%E6%8E%A7%E5%88%B6%E5%99%A8%E7%9A%84%E5%AF%BC%E8%88%AA%E6%8E%A7%E5%88%B6%E5%99%A8/</url>
      <content type="html"><![CDATA[<h2 id="UIViewController-Extension-h"><a href="#UIViewController-Extension-h" class="headerlink" title="UIViewController+Extension.h"></a>UIViewController+Extension.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line">@interface UIViewController (Extension)</div><div class="line">/**</div><div class="line"> 该VC的NavigationController</div><div class="line"> </div><div class="line"> @return UINavigationController</div><div class="line"> */</div><div class="line">- (UINavigationController *)skNavigationController;</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="UIViewController-Extension-m"><a href="#UIViewController-Extension-m" class="headerlink" title="UIViewController+Extension.m"></a>UIViewController+Extension.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">#import &quot;UIViewController+Extension.h&quot;</div><div class="line">@implementation UIViewController (AMPublic)</div><div class="line">// 获取任意控制器的导航控制器</div><div class="line">- (UINavigationController *)skNavigationController&#123;</div><div class="line">    UINavigationController *nav = nil;</div><div class="line">    if ([self isKindOfClass:[UINavigationController class]]) &#123;</div><div class="line">        nav = (id)self;</div><div class="line">    &#125;else&#123;</div><div class="line">        if ([self isKindOfClass:[UITabBarController class]]) &#123;</div><div class="line">            nav = [((UITabBarController *)self).selectedViewController amNavigationController];</div><div class="line">        &#125;else&#123;</div><div class="line">            nav = self.navigationController;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return nav;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记26-获取APP信息]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B026-%E8%8E%B7%E5%8F%96APP%E4%BF%A1%E6%81%AF/</url>
      <content type="html"><![CDATA[<h2 id="NSString-Extension-h"><a href="#NSString-Extension-h" class="headerlink" title="NSString+Extension.h"></a>NSString+Extension.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line">@interface NSString (Extension)</div><div class="line">/**</div><div class="line"> 获取APP名称</div><div class="line"></div><div class="line"> @return 氢广告</div><div class="line"> */</div><div class="line">+ (NSString *)stringFromApp_name;</div><div class="line"></div><div class="line">/**</div><div class="line"> 获取APP版本Version</div><div class="line"></div><div class="line"> @return 1.1.1</div><div class="line"> */</div><div class="line">+ (NSString *)stringFromApp_Version;</div><div class="line"></div><div class="line">/**</div><div class="line"> 获取APP开发版本号Build</div><div class="line"></div><div class="line"> @return 1</div><div class="line"> */</div><div class="line">+ (NSString *)stringFromApp_Build;</div><div class="line"></div><div class="line">/**</div><div class="line"> 获取BundleID</div><div class="line"></div><div class="line"> @return BundleID</div><div class="line"> */</div><div class="line">+ (NSString *)stringFromApp_BundleID;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="NSString-Extension-m"><a href="#NSString-Extension-m" class="headerlink" title="NSString+Extension.m"></a>NSString+Extension.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">#import &quot;NSString+Extension.h&quot;</div><div class="line">@implementation NSString (Extension)</div><div class="line">+ (NSString *)stringFromApp_name&#123;</div><div class="line">    NSDictionary *infoDic = [[NSBundle mainBundle] infoDictionary];</div><div class="line">    return [infoDic objectForKey:@&quot;CFBundleDisplayName&quot;];</div><div class="line">&#125;</div><div class="line">+ (NSString *)stringFromApp_Version&#123;</div><div class="line">    NSDictionary *infoDic = [[NSBundle mainBundle] infoDictionary];</div><div class="line">    return [infoDic objectForKey:@&quot;CFBundleShortVersionString&quot;];</div><div class="line">&#125;</div><div class="line">+ (NSString *)stringFromApp_Build&#123;</div><div class="line">    NSDictionary *infoDic = [[NSBundle mainBundle] infoDictionary];</div><div class="line">    return [infoDic objectForKey:@&quot;CFBundleVersion&quot;];</div><div class="line">&#125;</div><div class="line">+ (NSString *)stringFromApp_BundleID&#123;</div><div class="line">    return [[NSBundle mainBundle] bundleIdentifier];</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记25-获取设备信息]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B025-%E8%8E%B7%E5%8F%96%E8%AE%BE%E5%A4%87%E4%BF%A1%E6%81%AF/</url>
      <content type="html"><![CDATA[<h2 id="NSString-Extension-h"><a href="#NSString-Extension-h" class="headerlink" title="NSString+Extension.h"></a>NSString+Extension.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line"></div><div class="line">typedef NS_ENUM(NSUInteger, connectiontype) &#123;</div><div class="line">    _Unknown = 0,        // 未知</div><div class="line">    _PC,                 // 局域网</div><div class="line">    _WIFI,               // WIFI</div><div class="line">    _CellularUnknown,    // 蜂窝数据网络-未知</div><div class="line">    _2G,                 // 蜂窝数据网路-2G</div><div class="line">    _3G,                 // 蜂窝数据网络-3G</div><div class="line">    _4G,                 // 蜂窝数据网络-4G</div><div class="line">&#125;;</div><div class="line"></div><div class="line">typedef NS_ENUM(NSUInteger, devicetype) &#123;</div><div class="line">    _Unknown = 0,        // 未知</div><div class="line">    _iPhone  = 1,        // iPhone</div><div class="line">    _iPad    = 3,        // iPad</div><div class="line">&#125;;</div><div class="line"></div><div class="line">@interface NSString (Extension)</div><div class="line">/**</div><div class="line"> 获取UUID</div><div class="line"> */</div><div class="line">+ (NSString *)stringFromUUID;</div><div class="line">/**</div><div class="line"> 获取IMEI</div><div class="line"></div><div class="line"> @return @“”</div><div class="line"> */</div><div class="line">+ (NSString *)stringFromSystem_IMEI;</div><div class="line"></div><div class="line">/**</div><div class="line"> 获取Mac地址</div><div class="line"></div><div class="line"> @return Mac</div><div class="line"> */</div><div class="line">+ (NSString *)stringFromSystem_Mac;</div><div class="line">/**</div><div class="line"> 获取IP地址</div><div class="line"></div><div class="line"> @return IP</div><div class="line"> */</div><div class="line">+ (NSString *)stringFromSystem_IP;</div><div class="line"></div><div class="line">/**</div><div class="line"> 获取操作系统</div><div class="line"></div><div class="line"> @return iOS</div><div class="line"> */</div><div class="line">+ (NSString *)stringFromSystem_OS;</div><div class="line"></div><div class="line">/**</div><div class="line"> 获取操作系统版本</div><div class="line"></div><div class="line"> @return 10.0</div><div class="line"> */</div><div class="line">+ (NSString *)stringFromSystem_OSV;</div><div class="line"></div><div class="line">/**</div><div class="line"> 获取IDFA</div><div class="line"></div><div class="line"> @return IDFA</div><div class="line"> */</div><div class="line">+ (NSString *)stringFromSystem_IDFA;</div><div class="line">/**</div><div class="line"> 获取设备制造商</div><div class="line"></div><div class="line"> @return Apple</div><div class="line"> */</div><div class="line">+ (NSString *)stringFromSystem_MAKE;</div><div class="line"></div><div class="line">/**</div><div class="line"> 获取运营商信息</div><div class="line"> </div><div class="line"> @return iOS4.0以上，可能会被封杀</div><div class="line"> */</div><div class="line">+ (NSString *)stringFromSystem_Carrier;</div><div class="line"></div><div class="line">/**</div><div class="line"> 获取设备型号</div><div class="line"></div><div class="line"> @return iPhone 4S</div><div class="line"> */</div><div class="line">+ (NSString *)stringFromSystem_Model;</div><div class="line"></div><div class="line">/**</div><div class="line"> 获取设备类型</div><div class="line"></div><div class="line"> @return 0：未知，1：iPhone，3：iPad</div><div class="line"> */</div><div class="line">+ (NSInteger)stringFromSystem_DevType;</div><div class="line"></div><div class="line">/**</div><div class="line"> 获取联网类型</div><div class="line"></div><div class="line"> @return 2G,3G,4G,WIFI,无网络</div><div class="line"> */</div><div class="line">+ (NSInteger)stringFromSystem_netType;</div><div class="line"></div><div class="line">/**</div><div class="line"> 获取当前设备方向</div><div class="line"></div><div class="line"> @return 0 竖直 1横屏</div><div class="line"> */</div><div class="line">+ (NSInteger)stringFromSystem_Orientation;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="NSString-Extension-m"><a href="#NSString-Extension-m" class="headerlink" title="NSString+Extension.m"></a>NSString+Extension.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div></pre></td><td class="code"><pre><div class="line">#import &quot;NSString+Extension.h&quot;</div><div class="line">#import &lt;CommonCrypto/CommonDigest.h&gt;</div><div class="line">#import &lt;AdSupport/AdSupport.h&gt;</div><div class="line">#import &lt;sys/utsname.h&gt;</div><div class="line">#import &lt;UIKit/UIKit.h&gt;</div><div class="line">#import &lt;CoreTelephony/CTCarrier.h&gt;</div><div class="line">#import &lt;CoreTelephony/CTTelephonyNetworkInfo.h&gt;</div><div class="line">#import &quot;iPAddress.h&quot;</div><div class="line">@implementation NSString (Extension)</div><div class="line">+ (NSString *)stringFromUUID&#123;</div><div class="line">    return [[[UIDevice currentDevice] identifierForVendor] UUIDString];</div><div class="line">&#125;</div><div class="line">+ (NSString *)stringFromSystem_IMEI&#123;</div><div class="line">    // iOS7之后不能获取IMEI</div><div class="line">    /*</div><div class="line">     iOS 2.0版本以后UIDevice提供一个获取设备唯一标识符的方法uniqueIdentifier，通过该方法我们可以获取设备的序列号，</div><div class="line">     这个也是目前为止唯一可以确认唯一的标示符。好景不长，因为该唯一标识符与手机一一对应，苹果觉得可能会泄露用户隐私，</div><div class="line">     所以在iOS5之后该方法就被废弃掉了，因此iOS5以后不能获取手机IMEI，但是也是可以通过私有API获取手机的IMEI号的，</div><div class="line">     但是通过苹果私有API获取IMEI号，上架苹果商店会被拒掉的。</div><div class="line">     */</div><div class="line">    return @&quot;&quot;;</div><div class="line">&#125;</div><div class="line">+ (NSString *)stringFromSystem_Mac&#123;</div><div class="line">    // iOS7以后不能通过获得MAC地址来标示手机唯一</div><div class="line">    /*</div><div class="line">     应用在iOS6及以下时，可以正确取道Mac地址，在iOS7上，会返回固定值。</div><div class="line">     测试过mac地址，确实会返回固定值02:00:00:00:00:00</div><div class="line">     */</div><div class="line">    InitAddresses();</div><div class="line">    GetIPAddresses();</div><div class="line">    GetHWAddresses();</div><div class="line">    NSString *str;</div><div class="line">    for (int i = 0; i &lt; MAXADDRS; i ++) &#123;</div><div class="line">        static unsigned long localHost = 0x7F000001;// 127.0.0.1</div><div class="line">        unsigned long theAddr;</div><div class="line">        theAddr = ip_addrs[i];</div><div class="line">        if (theAddr == 0) &#123;</div><div class="line">            break;</div><div class="line">        &#125;</div><div class="line">        if (theAddr == localHost) &#123;</div><div class="line">            continue;</div><div class="line">        &#125;</div><div class="line">        str = [NSString stringWithFormat:@&quot;%s&quot;,hw_addrs[i]];</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    return str;</div><div class="line">&#125;</div><div class="line">+ (NSString *)stringFromSystem_IP&#123;</div><div class="line">    InitAddresses();</div><div class="line">    GetIPAddresses();</div><div class="line">    GetHWAddresses();</div><div class="line">    NSString *str;</div><div class="line">    for (int i = 0; i &lt; MAXADDRS; i ++) &#123;</div><div class="line">        static unsigned long localHost = 0x7F000001;// 127.0.0.1</div><div class="line">        unsigned long theAddr;</div><div class="line">        theAddr = ip_addrs[i];</div><div class="line">        if (theAddr == 0) &#123;</div><div class="line">            break;</div><div class="line">        &#125;</div><div class="line">        if (theAddr == localHost) &#123;</div><div class="line">            continue;</div><div class="line">        &#125;</div><div class="line">        str = [NSString stringWithFormat:@&quot;%s&quot;,ip_names[i]];</div><div class="line">    &#125;</div><div class="line">    return str;</div><div class="line">&#125;</div><div class="line">+ (NSString *)stringFromSystem_OS&#123;</div><div class="line">    return [NSString stringWithFormat:@&quot;%@&quot;,[[UIDevice currentDevice] systemName]];</div><div class="line">&#125;</div><div class="line">+ (NSString *)stringFromSystem_OSV&#123;</div><div class="line">    return [NSString stringWithFormat:@&quot;%@&quot;,[[UIDevice currentDevice] systemVersion]];</div><div class="line">&#125;</div><div class="line">+ (NSString *)stringFromSystem_IDFA&#123;</div><div class="line">    return [[[ASIdentifierManager sharedManager] advertisingIdentifier] UUIDString];</div><div class="line">&#125;</div><div class="line">+ (NSString *)stringFromSystem_Carrier&#123;</div><div class="line">    CTTelephonyNetworkInfo *info = [[CTTelephonyNetworkInfo alloc] init];</div><div class="line">    </div><div class="line">    CTCarrier *carrier = [info subscriberCellularProvider];</div><div class="line">    </div><div class="line">    return [NSString stringWithFormat:@&quot;%@&quot;,[carrier carrierName]];</div><div class="line">&#125;</div><div class="line">+ (NSString *)stringFromSystem_MAKE&#123;</div><div class="line">    return @&quot;Apple&quot;;</div><div class="line">&#125;</div><div class="line">+ (NSString *)stringFromSystem_Model&#123;</div><div class="line">    struct utsname systemInfo;</div><div class="line">    uname(&amp;systemInfo);</div><div class="line">    NSString *platform = [NSString stringWithCString:systemInfo.machine encoding:NSASCIIStringEncoding];</div><div class="line">    if ([platform isEqualToString:@&quot;iPhone1,1&quot;])&#123;</div><div class="line">        return @&quot;iPhone 2G&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone1,2&quot;])&#123;</div><div class="line">        return @&quot;iPhone 3G&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone2,1&quot;])&#123;</div><div class="line">        return @&quot;iPhone 3GS&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone3,1&quot;])&#123;</div><div class="line">        return @&quot;iPhone 4&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone3,2&quot;])&#123;</div><div class="line">        return @&quot;iPhone 4&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone3,3&quot;])&#123;</div><div class="line">        return @&quot;iPhone 4&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone4,1&quot;])&#123;</div><div class="line">        return @&quot;iPhone 4S&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone5,1&quot;])&#123;</div><div class="line">        return @&quot;iPhone 5&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone5,2&quot;])&#123;</div><div class="line">        return @&quot;iPhone 5&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone5,3&quot;])&#123;</div><div class="line">        return @&quot;iPhone 5c&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone5,4&quot;])&#123;</div><div class="line">        return @&quot;iPhone 5c&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone6,1&quot;])&#123;</div><div class="line">        return @&quot;iPhone 5s&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone6,2&quot;])&#123;</div><div class="line">        return @&quot;iPhone 5s&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone7,1&quot;])&#123;</div><div class="line">        return @&quot;iPhone 6 Plus&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone7,2&quot;])&#123;</div><div class="line">        return @&quot;iPhone 6&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone8,1&quot;])&#123;</div><div class="line">        return @&quot;iPhone 6s&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPhone8,2&quot;])&#123;</div><div class="line">        return @&quot;iPhone 6s Plus&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPod1,1&quot;])&#123;</div><div class="line">        return @&quot;iPod Touch 1G&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPod2,1&quot;])&#123;</div><div class="line">        return @&quot;iPod Touch 2G&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPod3,1&quot;])&#123;</div><div class="line">        return @&quot;iPod Touch 3G&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPod4,1&quot;])&#123;</div><div class="line">        return @&quot;iPod Touch 4G&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPod5,1&quot;])&#123;</div><div class="line">        return @&quot;iPod Touch 5G&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad1,1&quot;])&#123;</div><div class="line">        return @&quot;iPad 1G&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad2,1&quot;])&#123;</div><div class="line">        return @&quot;iPad 2&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad2,2&quot;])&#123;</div><div class="line">        return @&quot;iPad 2&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad2,3&quot;])&#123;</div><div class="line">        return @&quot;iPad 2&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad2,4&quot;])&#123;</div><div class="line">        return @&quot;iPad 2&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad2,5&quot;])&#123;</div><div class="line">        return @&quot;iPad Mini 1G&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad2,6&quot;])&#123;</div><div class="line">        return @&quot;iPad Mini 1G&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad2,7&quot;])&#123;</div><div class="line">        return @&quot;iPad Mini 1G&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad3,1&quot;])&#123;</div><div class="line">        return @&quot;iPad 3&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad3,2&quot;])&#123;</div><div class="line">        return @&quot;iPad 3&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad3,3&quot;])&#123;</div><div class="line">        return @&quot;iPad 3&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad3,4&quot;])&#123;</div><div class="line">        return @&quot;iPad 4&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad3,5&quot;])&#123;</div><div class="line">        return @&quot;iPad 4&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad3,6&quot;])&#123;</div><div class="line">        return @&quot;iPad 4&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad4,1&quot;])&#123;</div><div class="line">        return @&quot;iPad Air&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad4,2&quot;])&#123;</div><div class="line">        return @&quot;iPad Air&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad4,3&quot;])&#123;</div><div class="line">        return @&quot;iPad Air&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad4,4&quot;])&#123;</div><div class="line">        return @&quot;iPad Mini 2G&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad4,5&quot;])&#123;</div><div class="line">        return @&quot;iPad Mini 2G&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;iPad4,6&quot;])&#123;</div><div class="line">        return @&quot;iPad Mini 2G&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;i386&quot;])&#123;</div><div class="line">        return @&quot;iPhone Simulator&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    if ([platform isEqualToString:@&quot;x86_64&quot;])&#123;</div><div class="line">        return @&quot;iPhone Simulator&quot;;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    return platform;</div><div class="line">&#125;</div><div class="line">+ (NSInteger)stringFromSystem_DevType&#123;</div><div class="line">    </div><div class="line">    NSString *platform = [UIDevice currentDevice].model;</div><div class="line">    if ([platform containsString:@&quot;iPhone&quot;]) &#123;</div><div class="line">        return _iPhone;</div><div class="line">    &#125;else if ([platform containsString:@&quot;iPad&quot;])&#123;</div><div class="line">        return _iPad;</div><div class="line">    &#125;else&#123;</div><div class="line">        return _Unknown;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">+ (NSInteger)stringFromSystem_netType&#123;</div><div class="line">    UIApplication *application = [UIApplication sharedApplication];</div><div class="line">    NSArray *children = [[[application valueForKeyPath:@&quot;statusBar&quot;] valueForKeyPath:@&quot;foregroundView&quot;] subviews];</div><div class="line">    int type = 0;</div><div class="line">    for (id child in children) &#123;</div><div class="line">        if ([child isKindOfClass:NSClassFromString(@&quot;UIStatusBarDataNetworkItemView&quot;)]) &#123;</div><div class="line">            type = [[child valueForKeyPath:@&quot;dataNetworkType&quot;] intValue];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    switch (type) &#123;</div><div class="line">        case 0:</div><div class="line">            return _CellularUnknown;</div><div class="line">            break;</div><div class="line">        case 1:</div><div class="line">            return _2G;</div><div class="line">            break;</div><div class="line">        case 2:</div><div class="line">            return _3G;</div><div class="line">            break;</div><div class="line">        case 3:</div><div class="line">            return _4G;</div><div class="line">            break;</div><div class="line">        case 5:</div><div class="line">            return _WIFI;</div><div class="line">            break;</div><div class="line">        default:</div><div class="line">            return _Unknown;</div><div class="line">            break;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">+ (NSInteger)stringFromSystem_Orientation&#123;</div><div class="line">    UIDeviceOrientation orientation = [[UIDevice currentDevice] orientation];</div><div class="line">    if (orientation ==UIDeviceOrientationPortrait ||</div><div class="line">        orientation == UIDeviceOrientationPortraitUpsideDown) &#123;</div><div class="line">        return 0;</div><div class="line">    &#125;else&#123;</div><div class="line">        return 1;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="iPAddress-h"><a href="#iPAddress-h" class="headerlink" title="iPAddress.h"></a>iPAddress.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">#ifndef iPAddress_h</div><div class="line">#define iPAddress_h</div><div class="line"></div><div class="line">#include &lt;stdio.h&gt;</div><div class="line">#include &lt;stdlib.h&gt;</div><div class="line">#include &lt;string.h&gt;</div><div class="line">#include &lt;unistd.h&gt;</div><div class="line">#include &lt;sys/ioctl.h&gt;</div><div class="line">#include &lt;sys/types.h&gt;</div><div class="line">#include &lt;sys/socket.h&gt;</div><div class="line">#include &lt;netinet/in.h&gt;</div><div class="line">#include &lt;netdb.h&gt;</div><div class="line">#include &lt;arpa/inet.h&gt;</div><div class="line">#include &lt;sys/sockio.h&gt;</div><div class="line">#include &lt;net/if.h&gt;</div><div class="line">#include &lt;errno.h&gt;</div><div class="line">#include &lt;net/if_dl.h&gt;</div><div class="line">#include &lt;net/ethernet.h&gt;</div><div class="line"></div><div class="line">#define BUFFERSIZE  4000</div><div class="line">#define MAXADDRS    32</div><div class="line">#define min(a,b)    ((a) &lt; (b) ? (a) : (b))</div><div class="line">#define max(a,b)    ((a) &gt; (b) ? (a) : (b))</div><div class="line"></div><div class="line">extern char *if_names[MAXADDRS];</div><div class="line">extern char *ip_names[MAXADDRS];</div><div class="line">extern char *hw_addrs[MAXADDRS];</div><div class="line">extern unsigned long ip_addrs[MAXADDRS];</div><div class="line"></div><div class="line">// Function prototypes</div><div class="line">void InitAddresses();</div><div class="line">void FreeAddresses();</div><div class="line">void GetIPAddresses();</div><div class="line">void GetHWAddresses();</div><div class="line">#endif /* iPAddress_h */</div></pre></td></tr></table></figure>
<h2 id="iPAddress-c"><a href="#iPAddress-c" class="headerlink" title="iPAddress.c"></a>iPAddress.c</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div></pre></td><td class="code"><pre><div class="line">#include &quot;iPAddress.h&quot;</div><div class="line">char *if_names[MAXADDRS];</div><div class="line">char *ip_names[MAXADDRS];</div><div class="line">char *hw_addrs[MAXADDRS];</div><div class="line">unsigned long ip_addrs[MAXADDRS];</div><div class="line"></div><div class="line">static int   nextAddr = 0;</div><div class="line"></div><div class="line">void InitAddresses()</div><div class="line">&#123;</div><div class="line">    int i;</div><div class="line">    for (i=0; i&lt;MAXADDRS; ++i)</div><div class="line">    &#123;</div><div class="line">        if_names[i] = ip_names[i] = hw_addrs[i] = NULL;</div><div class="line">        ip_addrs[i] = 0;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void FreeAddresses()</div><div class="line">&#123;</div><div class="line">    int i;</div><div class="line">    for (i=0; i&lt;MAXADDRS; ++i)</div><div class="line">    &#123;</div><div class="line">        if (if_names[i] != 0) free(if_names[i]);</div><div class="line">        if (ip_names[i] != 0) free(ip_names[i]);</div><div class="line">        if (hw_addrs[i] != 0) free(hw_addrs[i]);</div><div class="line">        ip_addrs[i] = 0;</div><div class="line">    &#125;</div><div class="line">    InitAddresses();</div><div class="line">&#125;</div><div class="line"></div><div class="line">void GetIPAddresses()</div><div class="line">&#123;</div><div class="line">    int                 i, len, flags;</div><div class="line">    char                buffer[BUFFERSIZE], *ptr, lastname[IFNAMSIZ], *cptr;</div><div class="line">    struct ifconf       ifc;</div><div class="line">    struct ifreq        *ifr, ifrcopy;</div><div class="line">    struct sockaddr_in  *sin;</div><div class="line">    </div><div class="line">    char temp[80];</div><div class="line">    </div><div class="line">    int sockfd;</div><div class="line">    </div><div class="line">    for (i=0; i&lt;MAXADDRS; ++i)</div><div class="line">    &#123;</div><div class="line">        if_names[i] = ip_names[i] = NULL;</div><div class="line">        ip_addrs[i] = 0;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    sockfd = socket(AF_INET, SOCK_DGRAM, 0);</div><div class="line">    if (sockfd &lt; 0)</div><div class="line">    &#123;</div><div class="line">        perror(&quot;socket failed&quot;);</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    ifc.ifc_len = BUFFERSIZE;</div><div class="line">    ifc.ifc_buf = buffer;</div><div class="line">    </div><div class="line">    if (ioctl(sockfd, SIOCGIFCONF, &amp;ifc) &lt; 0)</div><div class="line">    &#123;</div><div class="line">        perror(&quot;ioctl error&quot;);</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    lastname[0] = 0;</div><div class="line">    </div><div class="line">    for (ptr = buffer; ptr &lt; buffer + ifc.ifc_len; )</div><div class="line">    &#123;</div><div class="line">        ifr = (struct ifreq *)ptr;</div><div class="line">        len = max(sizeof(struct sockaddr), ifr-&gt;ifr_addr.sa_len);</div><div class="line">        ptr += sizeof(ifr-&gt;ifr_name) + len;   // for next one in buffer</div><div class="line">        </div><div class="line">        if (ifr-&gt;ifr_addr.sa_family != AF_INET)</div><div class="line">        &#123;</div><div class="line">            continue; // ignore if not desired address family</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        if ((cptr = (char *)strchr(ifr-&gt;ifr_name, &apos;:&apos;)) != NULL)</div><div class="line">        &#123;</div><div class="line">            *cptr = 0;        // replace colon will null</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        if (strncmp(lastname, ifr-&gt;ifr_name, IFNAMSIZ) == 0)</div><div class="line">        &#123;</div><div class="line">            continue; /* already processed this interface */</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        memcpy(lastname, ifr-&gt;ifr_name, IFNAMSIZ);</div><div class="line">        </div><div class="line">        ifrcopy = *ifr;</div><div class="line">        ioctl(sockfd, SIOCGIFFLAGS, &amp;ifrcopy);</div><div class="line">        flags = ifrcopy.ifr_flags;</div><div class="line">        if ((flags &amp; IFF_UP) == 0)</div><div class="line">        &#123;</div><div class="line">            continue; // ignore if interface not up</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        if_names[nextAddr] = (char *)malloc(strlen(ifr-&gt;ifr_name)+1);</div><div class="line">        if (if_names[nextAddr] == NULL)</div><div class="line">        &#123;</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        strcpy(if_names[nextAddr], ifr-&gt;ifr_name);</div><div class="line">        </div><div class="line">        sin = (struct sockaddr_in *)&amp;ifr-&gt;ifr_addr;</div><div class="line">        strcpy(temp, inet_ntoa(sin-&gt;sin_addr));</div><div class="line">        </div><div class="line">        ip_names[nextAddr] = (char *)malloc(strlen(temp)+1);</div><div class="line">        if (ip_names[nextAddr] == NULL)</div><div class="line">        &#123;</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        strcpy(ip_names[nextAddr], temp);</div><div class="line">        </div><div class="line">        ip_addrs[nextAddr] = sin-&gt;sin_addr.s_addr;</div><div class="line">        </div><div class="line">        ++nextAddr;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    close(sockfd);</div><div class="line">&#125;</div><div class="line"></div><div class="line">void GetHWAddresses()</div><div class="line">&#123;</div><div class="line">    struct ifconf ifc;</div><div class="line">    struct ifreq *ifr;</div><div class="line">    int i, sockfd;</div><div class="line">    char buffer[BUFFERSIZE], *cp, *cplim;</div><div class="line">    char temp[80];</div><div class="line">    </div><div class="line">    for (i=0; i&lt;MAXADDRS; ++i)</div><div class="line">    &#123;</div><div class="line">        hw_addrs[i] = NULL;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    sockfd = socket(AF_INET, SOCK_DGRAM, 0);</div><div class="line">    if (sockfd &lt; 0)</div><div class="line">    &#123;</div><div class="line">        perror(&quot;socket failed&quot;);</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    ifc.ifc_len = BUFFERSIZE;</div><div class="line">    ifc.ifc_buf = buffer;</div><div class="line">    </div><div class="line">    if (ioctl(sockfd, SIOCGIFCONF, (char *)&amp;ifc) &lt; 0)</div><div class="line">    &#123;</div><div class="line">        perror(&quot;ioctl error&quot;);</div><div class="line">        close(sockfd);</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    ifr = ifc.ifc_req;</div><div class="line">    </div><div class="line">    cplim = buffer + ifc.ifc_len;</div><div class="line">    </div><div class="line">    for (cp=buffer; cp &lt; cplim; )</div><div class="line">    &#123;</div><div class="line">        ifr = (struct ifreq *)cp;</div><div class="line">        if (ifr-&gt;ifr_addr.sa_family == AF_LINK)</div><div class="line">        &#123;</div><div class="line">            struct sockaddr_dl *sdl = (struct sockaddr_dl *)&amp;ifr-&gt;ifr_addr;</div><div class="line">            int a,b,c,d,e,f;</div><div class="line">            int i;</div><div class="line">            </div><div class="line">            strcpy(temp, (char *)ether_ntoa((const struct ether_addr *)LLADDR(sdl)));</div><div class="line">            sscanf(temp, &quot;%x:%x:%x:%x:%x:%x&quot;, &amp;a, &amp;b, &amp;c, &amp;d, &amp;e, &amp;f);</div><div class="line">            sprintf(temp, &quot;%02X:%02X:%02X:%02X:%02X:%02X&quot;,a,b,c,d,e,f);</div><div class="line">            </div><div class="line">            for (i=0; i&lt;MAXADDRS; ++i)</div><div class="line">            &#123;</div><div class="line">                if ((if_names[i] != NULL) &amp;&amp; (strcmp(ifr-&gt;ifr_name, if_names[i]) == 0))</div><div class="line">                &#123;</div><div class="line">                    if (hw_addrs[i] == NULL)</div><div class="line">                    &#123;</div><div class="line">                        hw_addrs[i] = (char *)malloc(strlen(temp)+1);</div><div class="line">                        strcpy(hw_addrs[i], temp);</div><div class="line">                        break;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        cp += sizeof(ifr-&gt;ifr_name) + max(sizeof(ifr-&gt;ifr_addr), ifr-&gt;ifr_addr.sa_len);</div><div class="line">    &#125;</div><div class="line">    close(sockfd);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记24-时间戳]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B024-%E6%97%B6%E9%97%B4%E6%88%B3/</url>
      <content type="html"><![CDATA[<h2 id="NSString-Extension-h"><a href="#NSString-Extension-h" class="headerlink" title="NSString+Extension.h"></a>NSString+Extension.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line">@interface NSString (Extension)</div><div class="line">/**</div><div class="line"> 获取上传到服务器的时间格式的当前时间</div><div class="line"></div><div class="line"> @return @&quot;2016-11-07T13:58:52Z&quot;</div><div class="line"> */</div><div class="line">+ (NSString *)stringToServerStringWithCurrentDate;</div><div class="line">/**</div><div class="line"> *  服务器返回的时间字符串转换成标准时间字符串</div><div class="line"> *</div><div class="line"> *  @return 标准时间字符串</div><div class="line"> */</div><div class="line">- (NSString *)stringToDateString;</div><div class="line">/**</div><div class="line"> *  标准时间字符串转换成上传服务器的时间字符串</div><div class="line"> *  dateFormat   是你上传到的时间的格式 例如  yyyy/MM/dd   yyyy-MM-dd</div><div class="line"> *  @return 标准时间字符串</div><div class="line"> */</div><div class="line">- (NSString *)stringToServerStringWithDataFormat:(NSString *)dateFormat;</div><div class="line">/**</div><div class="line"> *  返回的过期时间转换成时间戳</div><div class="line"> *</div><div class="line"> *  @return 一个要过期的时间戳</div><div class="line"> */</div><div class="line">- (NSInteger)stringTimeToTimeInterval;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="NSString-Extension-m"><a href="#NSString-Extension-m" class="headerlink" title="NSString+Extension.m"></a>NSString+Extension.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">#import &quot;NSString+Extension.h&quot;</div><div class="line">@implementation NSString (ExaminePhoneNum)</div><div class="line">// 获取上传到服务器的时间格式的当前时间</div><div class="line">+ (NSString *)stringToServerStringWithCurrentDate&#123;</div><div class="line">    </div><div class="line">    NSDate *date = [NSDate date];</div><div class="line">    NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];</div><div class="line">    [dateFormatter setDateFormat:@&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;&quot;];</div><div class="line">    return [dateFormatter stringFromDate:date];</div><div class="line">&#125;</div><div class="line">// 服务器返回的时间字符串转换成标准时间字符串</div><div class="line">- (NSString *)stringToDateString&#123;</div><div class="line">    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];</div><div class="line"></div><div class="line">    [formatter setDateFormat:@&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;+08:00&apos;&quot;];</div><div class="line">    NSDate* date = [formatter dateFromString:self]; //------------将字符串按formatter转成nsdate</div><div class="line"></div><div class="line">    NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];</div><div class="line">    </div><div class="line">    [dateFormatter setDateFormat:@&quot;&quot;];</div><div class="line">  </div><div class="line">    return [dateFormatter stringFromDate:date];</div><div class="line">&#125;</div><div class="line">// 标准时间字符串转换成上传服务器的时间字符串</div><div class="line">- (NSString *)stringToServerStringWithDataFormat:(NSString *)dateFormat&#123;</div><div class="line">    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];</div><div class="line">    [formatter setDateFormat:dateFormat];</div><div class="line"></div><div class="line">    NSDate* date = [formatter dateFromString:self]; //------------将字符串</div><div class="line">    NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];</div><div class="line">//    dateFormatter.timeZone = [NSTimeZone timeZoneForSecondsFromGMT:0];</div><div class="line">    [dateFormatter setDateFormat:@&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;&quot;];</div><div class="line">    return [dateFormatter stringFromDate:date];</div><div class="line">&#125;</div><div class="line">// 返回的过期时间转换成时间戳</div><div class="line">- (NSInteger)stringTimeToTimeInterval&#123;</div><div class="line">    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];</div><div class="line">    [formatter setTimeZone:[NSTimeZone timeZoneWithAbbreviation:@&quot;UTC&quot;]];</div><div class="line">    [formatter setDateFormat:@&quot;yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;&quot;];</div><div class="line">    NSDate* date = [formatter dateFromString:self];</div><div class="line">    NSInteger time = [date timeIntervalSince1970];</div><div class="line">    return time - 100;</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记23-数据四舍五入保存]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B023-%E6%95%B0%E6%8D%AE%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5%E4%BF%9D%E5%AD%98/</url>
      <content type="html"><![CDATA[<h2 id="NSString-Extension-h"><a href="#NSString-Extension-h" class="headerlink" title="NSString+Extension.h"></a>NSString+Extension.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line">@interface NSString (Extension)</div><div class="line">/**</div><div class="line"> 小说点后超过两位时，四舍五入保存两位</div><div class="line"></div><div class="line"> @param str 传入的字符串</div><div class="line"></div><div class="line"> @return 保留两位小数点后的字符串</div><div class="line"> */</div><div class="line">+ (NSString *)strSeparatedToKeepTwoDecimalPlaces:(NSString *)str;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="NSString-Extension-m"><a href="#NSString-Extension-m" class="headerlink" title="NSString+Extension.m"></a>NSString+Extension.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">#import &quot;NSString+Extension.h&quot;</div><div class="line">@implementation NSString (ExaminePhoneNum)</div><div class="line">// 小说点后超过两位时，四舍五入保存两位</div><div class="line">+ (NSString *)strSeparatedToKeepTwoDecimalPlaces:(NSString *)str&#123;</div><div class="line">    </div><div class="line">    if ([str containsString:@&quot;.&quot;]) &#123;</div><div class="line">        NSArray *arr = [str componentsSeparatedByString:@&quot;.&quot;];</div><div class="line">        NSString *str0 = arr[0];</div><div class="line">        NSString *str1 = arr[1];</div><div class="line">        if (str1.length &gt; 2) &#123;</div><div class="line">            NSString *str2 = [str1 substringToIndex:2];</div><div class="line">            NSString *str3 = [str1 substringWithRange:NSMakeRange(2, 1)];</div><div class="line">            if (str3.integerValue &gt;= 5) &#123;</div><div class="line">                str2 = [NSString stringWithFormat:@&quot;%ld&quot;,(long)(str2.integerValue + 1)];</div><div class="line">                if (str2.integerValue &gt;= 100) &#123;</div><div class="line">                    str2 = @&quot;00&quot;;</div><div class="line">                    str0 = [NSString stringWithFormat:@&quot;%ld&quot;,(long)(str0.integerValue + 1)];</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            return [NSString stringWithFormat:@&quot;%@.%@&quot;,str0,str2];</div><div class="line">        &#125;else&#123;</div><div class="line">            return str;</div><div class="line">        &#125;</div><div class="line">    &#125;else&#123;</div><div class="line">        return str;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记22-XML转义]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B022-XML%E8%BD%AC%E4%B9%89/</url>
      <content type="html"><![CDATA[<h2 id="NSString-Extension-h"><a href="#NSString-Extension-h" class="headerlink" title="NSString+Extension.h"></a>NSString+Extension.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line">@interface NSString (Extension)</div><div class="line">/**</div><div class="line"> 保存时将特殊字符转义为xml字符</div><div class="line"></div><div class="line"> @return 转义后的字符</div><div class="line"> */</div><div class="line">+ (NSString *)specialStringChangeForXml:(NSString *)str;</div><div class="line"></div><div class="line">/**</div><div class="line"> 解析xml的时候将特殊字符转换为普通字符</div><div class="line"></div><div class="line"> @param str xml字符串</div><div class="line"></div><div class="line"> @return 转义后的字符</div><div class="line"> */</div><div class="line">+ (NSString *)xmlSpecialStringChangeForNormalString:(NSString *)str;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="NSString-Extension-m"><a href="#NSString-Extension-m" class="headerlink" title="NSString+Extension.m"></a>NSString+Extension.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">#import &quot;NSString+Extension.h&quot;</div><div class="line">@implementation NSString (ExaminePhoneNum)</div><div class="line">// 字符串转义编码</div><div class="line">+ (NSString *)specialStringChangeForXml:(NSString *)str&#123;</div><div class="line">    </div><div class="line">    str = [str stringByReplacingOccurrencesOfString:@&quot;&amp;&quot; withString:@&quot;&amp;amp;&quot;];</div><div class="line">    str = [str stringByReplacingOccurrencesOfString:@&quot;&lt;&quot; withString:@&quot;&amp;lt;&quot;];</div><div class="line">    str = [str stringByReplacingOccurrencesOfString:@&quot;&gt;&quot; withString:@&quot;&amp;gt;&quot;];</div><div class="line">    str = [str stringByReplacingOccurrencesOfString:@&quot;&apos;&quot; withString:@&quot;&amp;apos;&quot;];</div><div class="line">    str = [str stringByReplacingOccurrencesOfString:@&quot;\&quot;&quot; withString:@&quot;&amp;quot;&quot;];</div><div class="line">    </div><div class="line">    return str;</div><div class="line">&#125;</div><div class="line">// 字符串转义解码</div><div class="line">+ (NSString *)xmlSpecialStringChangeForNormalString:(NSString *)str&#123;</div><div class="line">    </div><div class="line">    str = [str stringByReplacingOccurrencesOfString:@&quot;&amp;amp;&quot; withString:@&quot;&amp;&quot;];</div><div class="line">    str = [str stringByReplacingOccurrencesOfString:@&quot;&amp;lt;&quot; withString:@&quot;&lt;&quot;];</div><div class="line">    str = [str stringByReplacingOccurrencesOfString:@&quot;&amp;gt;&quot; withString:@&quot;&gt;&quot;];</div><div class="line">    str = [str stringByReplacingOccurrencesOfString:@&quot;&amp;apos;&quot; withString:@&quot;&apos;&quot;];</div><div class="line">    str = [str stringByReplacingOccurrencesOfString:@&quot;&amp;quot;&quot; withString:@&quot;\&quot;&quot;];</div><div class="line">    </div><div class="line">    return str;</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记21-获取当前时间戳字符串]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B021-%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4%E6%88%B3%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      <content type="html"><![CDATA[<h2 id="NSString-Extension-h"><a href="#NSString-Extension-h" class="headerlink" title="NSString+Extension.h"></a>NSString+Extension.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line">@interface NSString (Extension)</div><div class="line">/**</div><div class="line"> *  获得当前的时间戳字符串</div><div class="line"> *</div><div class="line"> *  @return &lt;#return value description#&gt;</div><div class="line"> */</div><div class="line">+ (NSString *)stringFormTimeInterval;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="NSString-Extension-m"><a href="#NSString-Extension-m" class="headerlink" title="NSString+Extension.m"></a>NSString+Extension.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">#import &quot;NSString+Extension.h&quot;</div><div class="line">@implementation NSString (ExaminePhoneNum)</div><div class="line">/**获得当前的时间戳字符串*/</div><div class="line">+ (NSString *)stringFormTimeInterval&#123;</div><div class="line">    NSTimeInterval interval = [[NSDate date] timeIntervalSince1970] * 1000;</div><div class="line">    NSInteger now = (NSInteger)interval;</div><div class="line">    NSString *timeSp = [NSString stringWithFormat:@&quot;%zd&quot;,now];</div><div class="line">    return timeSp;</div><div class="line"></div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记20-文件夹操作]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B020-%E6%96%87%E4%BB%B6%E5%A4%B9%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h2 id="NSString-Extension-h"><a href="#NSString-Extension-h" class="headerlink" title="NSString+Extension.h"></a>NSString+Extension.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line">@interface NSString (Extension)</div><div class="line">/**</div><div class="line"> *  返回的caches文件夹的路径</div><div class="line"> *</div><div class="line"> *  @param fileName 文件名</div><div class="line"> *</div><div class="line"> *  @return caches文件夹的路径</div><div class="line"> */</div><div class="line">+ (NSString *)stringFromCaches:(NSString *)fileName;</div><div class="line">/**</div><div class="line"> *  删除指定的文件</div><div class="line"> *</div><div class="line"> *  @param name 文件名</div><div class="line"> */</div><div class="line">+(void)stringToDeleteFileWithName:(NSString *)name;</div><div class="line">+(void)deleteFileWithFullPathName:(NSString *)fileFullPath;</div><div class="line"></div><div class="line">/**</div><div class="line"> *  创建文件夹</div><div class="line"> *</div><div class="line"> *  @param pathName 名字</div><div class="line"> */</div><div class="line">+ (NSString *)stringToCreateDirectoryAtPath:(NSString *)pathName;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="NSString-Extension-m"><a href="#NSString-Extension-m" class="headerlink" title="NSString+Extension.m"></a>NSString+Extension.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">#import &quot;NSString+Extension.h&quot;</div><div class="line">@implementation NSString (ExaminePhoneNum)</div><div class="line">+ (NSString *)stringFromCaches:(NSString *)fileName&#123;</div><div class="line">    NSString *caches = [NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) lastObject];</div><div class="line">    </div><div class="line">    //拼接文件全路径</div><div class="line">    NSString *fullPtah = [caches stringByAppendingPathComponent:fileName];</div><div class="line">    return fullPtah;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/** 删除指定的文件*/</div><div class="line">+(void)stringToDeleteFileWithName:(NSString *)name &#123;</div><div class="line">    NSFileManager *fileMgr = [NSFileManager defaultManager];</div><div class="line">    NSString *FileFullPath = [NSString stringFromCaches:name];</div><div class="line">    BOOL bRet = [fileMgr fileExistsAtPath:FileFullPath];</div><div class="line">    if (bRet) &#123;</div><div class="line">        NSError *err;</div><div class="line">        [fileMgr removeItemAtPath:FileFullPath error:&amp;err];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/** 删除指定的文件*/</div><div class="line">+(void)deleteFileWithFullPathName:(NSString *)fileFullPath &#123;</div><div class="line">    NSFileManager *fileMgr = [NSFileManager defaultManager];</div><div class="line">    BOOL bRet = [fileMgr fileExistsAtPath:fileFullPath];</div><div class="line">    if (bRet) &#123;</div><div class="line">        NSError *err;</div><div class="line">        [fileMgr removeItemAtPath:fileFullPath error:&amp;err];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">/** 创建文件夹*/</div><div class="line">+ (NSString *)stringToCreateDirectoryAtPath:(NSString *)pathName &#123;</div><div class="line">    NSString *path = [NSString stringFromCaches:pathName];</div><div class="line">    if (![[NSFileManager defaultManager] fileExistsAtPath:path]) &#123;</div><div class="line">        [[NSFileManager defaultManager] createDirectoryAtPath:path withIntermediateDirectories:YES attributes:nil error:nil];</div><div class="line">    &#125;</div><div class="line">    return path;</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记19-字符串高度]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B019-%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%AB%98%E5%BA%A6/</url>
      <content type="html"><![CDATA[<h2 id="NSString-Extension-h"><a href="#NSString-Extension-h" class="headerlink" title="NSString+Extension.h"></a>NSString+Extension.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line">@interface NSString (Extension)</div><div class="line">/**</div><div class="line"> *  计算字符串的高度</div><div class="line"> *</div><div class="line"> *  @param size      字号大小</div><div class="line"> *  @param viewWidth 计算控件的宽度</div><div class="line"> *</div><div class="line"> *  @return 字符串的高度</div><div class="line"> */</div><div class="line">- (float)heightForStringWithFont:(float)size viewWidth:(float)viewWidth;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="NSString-Extension-m"><a href="#NSString-Extension-m" class="headerlink" title="NSString+Extension.m"></a>NSString+Extension.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#import &quot;NSString+Extension.h&quot;</div><div class="line">@implementation NSString (Extension)</div><div class="line">- (float)heightForStringWithFont:(float)size viewWidth:(float)viewWidth&#123;</div><div class="line">        CGSize detailSize = [self boundingRectWithSize:CGSizeMake(viewWidth, 10000) options:NSStringDrawingUsesLineFragmentOrigin attributes:@&#123;NSFontAttributeName:[UIFont systemFontOfSize:size]&#125; context:nil].size;</div><div class="line">    return detailSize.height;</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记18-base64加密]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B018-base64%E5%8A%A0%E5%AF%86/</url>
      <content type="html"><![CDATA[<h2 id="NSString-Encryption-h"><a href="#NSString-Encryption-h" class="headerlink" title="NSString+Encryption.h"></a>NSString+Encryption.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line"></div><div class="line">@interface NSString (Encryption)</div><div class="line">/**</div><div class="line"> *  字符串base64 加密</div><div class="line"> *</div><div class="line"> *  @return 加密后的字符串</div><div class="line"> */</div><div class="line">+ (NSString*)encodeBase64String:(NSString *)input;</div><div class="line">+ (NSString*)decodeBase64String:(NSString *)input;</div><div class="line">+ (NSString*)encodeBase64Data:(NSData *)data;</div><div class="line">+ (NSString*)decodeBase64Data:(NSData *)data;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="NSString-Encryption-m"><a href="#NSString-Encryption-m" class="headerlink" title="NSString+Encryption.m"></a>NSString+Encryption.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">#import &quot;NSString+Encryption.h&quot;</div><div class="line">#import &quot;GTMBase64.h&quot;</div><div class="line">@implementation NSString (Encryption)</div><div class="line">#pragma mark - base64</div><div class="line">+ (NSString*)encodeBase64String:(NSString * )input &#123;</div><div class="line">    NSData *data = [input dataUsingEncoding:NSUTF8StringEncoding allowLossyConversion:YES];</div><div class="line">    data = [GTMBase64 encodeData:data];</div><div class="line">    NSString *base64String = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];</div><div class="line">    return base64String;</div><div class="line">&#125;</div><div class="line"></div><div class="line">+ (NSString*)decodeBase64String:(NSString * )input &#123;</div><div class="line">    NSData *data = [input dataUsingEncoding:NSUTF8StringEncoding allowLossyConversion:YES];</div><div class="line">    data = [GTMBase64 decodeData:data];</div><div class="line">    NSString *base64String = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];</div><div class="line">    return base64String;</div><div class="line">&#125;</div><div class="line"></div><div class="line">+ (NSString*)encodeBase64Data:(NSData *)data &#123;</div><div class="line">    data = [GTMBase64 encodeData:data];</div><div class="line">    NSString *base64String = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];</div><div class="line">    return base64String;</div><div class="line">&#125;</div><div class="line"></div><div class="line">+ (NSString*)decodeBase64Data:(NSData *)data &#123;</div><div class="line">    data = [GTMBase64 decodeData:data];</div><div class="line">    NSString *base64String = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];</div><div class="line">    return base64String;</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记17-AES加密]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B017-AES%E5%8A%A0%E5%AF%86/</url>
      <content type="html"><![CDATA[<h2 id="NSData-AES-Encryption-h"><a href="#NSData-AES-Encryption-h" class="headerlink" title="NSData+AES_Encryption.h"></a>NSData+AES_Encryption.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line"></div><div class="line">@interface NSData (AES_Encryption)</div><div class="line"></div><div class="line">/**</div><div class="line"> *  AES加密</div><div class="line"> *</div><div class="line"> *  @param key 公钥</div><div class="line"> *</div><div class="line"> *  @return 加密后的数据</div><div class="line"> */</div><div class="line">- (NSData *)AES256EncryptWithKey:(NSString *)key;</div><div class="line"></div><div class="line">/**</div><div class="line"> *  AES解密</div><div class="line"> *</div><div class="line"> *  @param key 公钥</div><div class="line"> *</div><div class="line"> *  @return 解密后的数据</div><div class="line"> */</div><div class="line">- (NSData *)AES256DecryptWithKey:(NSString *)key;</div><div class="line"></div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="NSData-AES-Encryption-m"><a href="#NSData-AES-Encryption-m" class="headerlink" title="NSData+AES_Encryption.m"></a>NSData+AES_Encryption.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">#import &quot;NSData+AES_Encryption.h&quot;</div><div class="line">#import &lt;CommonCrypto/CommonCryptor.h&gt;</div><div class="line"></div><div class="line">@implementation NSData (AES_Encryption)</div><div class="line"></div><div class="line"></div><div class="line">- (NSData *)AES256EncryptWithKey:(NSString *)key &#123;//加密</div><div class="line">    char keyPtr[kCCKeySizeAES256+1];</div><div class="line">    bzero(keyPtr, sizeof(keyPtr));</div><div class="line">    [key getCString:keyPtr maxLength:sizeof(keyPtr) encoding:NSUTF8StringEncoding];</div><div class="line">    NSUInteger dataLength = [self length];</div><div class="line">    size_t bufferSize = dataLength + kCCBlockSizeAES128;</div><div class="line">    void *buffer = malloc(bufferSize);</div><div class="line">    size_t numBytesEncrypted = 0;</div><div class="line">    CCCryptorStatus cryptStatus = CCCrypt(kCCEncrypt, kCCAlgorithmAES128,</div><div class="line">                                          kCCOptionPKCS7Padding | kCCOptionECBMode,</div><div class="line">                                          keyPtr, kCCBlockSizeAES128,</div><div class="line">                                          NULL,</div><div class="line">                                          [self bytes], dataLength,</div><div class="line">                                          buffer, bufferSize,</div><div class="line">                                          &amp;numBytesEncrypted);</div><div class="line">    if (cryptStatus == kCCSuccess) &#123;</div><div class="line">        return [NSData dataWithBytesNoCopy:buffer length:numBytesEncrypted];</div><div class="line">    &#125;</div><div class="line">    free(buffer);</div><div class="line">    return nil;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">- (NSData *)AES256DecryptWithKey:(NSString *)key &#123;//解密</div><div class="line">    char keyPtr[kCCKeySizeAES256+1];</div><div class="line">    bzero(keyPtr, sizeof(keyPtr));</div><div class="line">    [key getCString:keyPtr maxLength:sizeof(keyPtr) encoding:NSUTF8StringEncoding];</div><div class="line">    NSUInteger dataLength = [self length];</div><div class="line">    size_t bufferSize = dataLength + kCCBlockSizeAES128;</div><div class="line">    void *buffer = malloc(bufferSize);</div><div class="line">    size_t numBytesDecrypted = 0;</div><div class="line">    CCCryptorStatus cryptStatus = CCCrypt(kCCDecrypt, kCCAlgorithmAES128,</div><div class="line">                                          kCCOptionPKCS7Padding | kCCOptionECBMode,</div><div class="line">                                          keyPtr, kCCBlockSizeAES128,</div><div class="line">                                          NULL,</div><div class="line">                                          [self bytes], dataLength,</div><div class="line">                                          buffer, bufferSize,</div><div class="line">                                          &amp;numBytesDecrypted);</div><div class="line">    if (cryptStatus == kCCSuccess) &#123;</div><div class="line">        return [NSData dataWithBytesNoCopy:buffer length:numBytesDecrypted];</div><div class="line">    &#125;</div><div class="line">    free(buffer);</div><div class="line">    return nil;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记16-SHA1+base64加密]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B016-SHA1-base64%E5%8A%A0%E5%AF%86/</url>
      <content type="html"><![CDATA[<h2 id="NSString-Encryption-h"><a href="#NSString-Encryption-h" class="headerlink" title="NSString+Encryption.h"></a>NSString+Encryption.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line"></div><div class="line">@interface NSString (Encryption)</div><div class="line">/**</div><div class="line"> *  sha1+base64加密</div><div class="line"> *</div><div class="line"> *  @return 获取加密后的字符串</div><div class="line"> */</div><div class="line">- (NSString *)sha1_base64;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="NSString-Encryption-m"><a href="#NSString-Encryption-m" class="headerlink" title="NSString+Encryption.m"></a>NSString+Encryption.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">#import &quot;NSString+Encryption.h&quot;</div><div class="line">#import &lt;CommonCrypto/CommonDigest.h&gt;</div><div class="line">#import &quot;GTMBase64.h&quot;</div><div class="line">@implementation NSString (Encryption)</div><div class="line">/**</div><div class="line"> *  sha1+base64加密</div><div class="line"> *</div><div class="line"> *  @return 获取加密后的字符串</div><div class="line"> */</div><div class="line">- (NSString *)sha1_base64 &#123;</div><div class="line">    </div><div class="line">    const char *cStr = [self cStringUsingEncoding:NSUTF8StringEncoding];</div><div class="line">    NSData *data = [NSData dataWithBytes:cStr length:self.length];</div><div class="line">    </div><div class="line">    unsigned char digest[CC_SHA1_DIGEST_LENGTH];</div><div class="line">    CC_SHA1(data.bytes, (uint32_t)data.length, digest);</div><div class="line">    </div><div class="line">    NSData *base64 = [[NSData alloc] initWithBytes:digest length:CC_SHA1_DIGEST_LENGTH];</div><div class="line">    base64 = [GTMBase64 encodeData:base64];</div><div class="line">    </div><div class="line">    NSString *encryptionString = [[NSString alloc] initWithData:base64 encoding:NSUTF8StringEncoding];</div><div class="line">    </div><div class="line">    return encryptionString;</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记15-字符串SHA1加密]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B015-%E5%AD%97%E7%AC%A6%E4%B8%B2SHA1%E5%8A%A0%E5%AF%86/</url>
      <content type="html"><![CDATA[<h2 id="算法解析"><a href="#算法解析" class="headerlink" title="算法解析"></a>算法解析</h2><p>SHA1算法原理<br>1 SHA1算法简介<br>安全哈希算法（Secure Hash Algorithm）主要适用于数字签名标准（Digital Signature Standard DSS）里面定义的数字签名算法（Digital Signature Algorithm DSA）。对于长度小于2^64位的消息，SHA1会产生一个160位的消息摘要。当接收到消息的时候，这个消息摘要可以用来验证数据的完整性。在传输的过程中，数据很可能会发生变化，那么这时候就会产生不同的消息摘要。<br>SHA1有如下特性：不可以从消息摘要中复原信息；两个不同的消息不会产生同样的消息摘要。<br>2 术语和概念<br>2.1位(Bit)，字节（Byte）和字（Word）<br>SHA1始终把消息当成一个位（bit）字符串来处理。本文中，一个“字”（Word）是32位，而一个“字节”（Byte）是8位。比如，字符串“abc”可以被转换成一个位字符串：01100001 01100010 01100011。它也可以被表示成16进制字符串: 0x616263.<br>2.2 运算符和符号<br>下面的逻辑运算符都被运用于“字”（Word）<br>X^Y    = X， Y逻辑与<br>X \/ Y   = X， Y逻辑或<br>X XOR Y= X， Y逻辑异或<br>~X     =   X逻辑取反<br>X+Y定义如下：<br>字 X 和 Y 代表两个整数 x 和y, 其中 0 &lt;= x &lt; 2^32 且 0 &lt;= y &lt; 2^32. 令整数z = (x + y) mod 2^32. 这时候 0 &lt;= z &lt; 2^32. 将z转换成字Z, 那么就是 Z = X + Y.<br>循环左移位操作符Sn(X)。X是一个字，n是一个整数，0&lt;=n&lt;=32。Sn(X) = (X&lt;<n)or(x>&gt;32-n)<br>X&lt;<n定义如下：抛弃最左边的n位数字，将各个位依次向左移动n位，然后用0填补右边的n位（最后结果还是32位）。x>&gt;n是抛弃右边的n位，将各个位依次向右移动n位，然后在左边的n位填0。因此可以叫Sn(X)位循环移位运算<br>3 SHA1算法描述<br>在SHA1算法中，我们必须把原始消息（字符串，文件等）转换成位字符串。SHA1算法只接受位作为输入。假设我们对字符串“abc”产生消息摘要。首先，我们将它转换成位字符串如下：<br>01100001 01100010 01100011<br>―――――――――――――<br>‘a’=97   ‘b’=98   ‘c’=99<br>这个位字符串的长度为24。下面我们需要5个步骤来计算MD5。<br>3.1 补位<br>消息必须进行补位，以使其长度在对512取模以后的余数是448。也就是说，（补位后的消息长度）%512 = 448。即使长度已经满足对512取模后余数是448，补位也必须要进行。<br>补位是这样进行的：先补一个1，然后再补0，直到长度满足对512取模后余数是448。总而言之，补位是至少补一位，最多补512位。还是以前面的“abc”为例显示补位的过程。<br>原始信息： 01100001 01100010 01100011<br>补位第一步：01100001 01100010 01100011 1<br>首先补一个“1”<br>补位第二步：01100001 01100010 01100011 10…..0<br>然后补423个“0”<br>我们可以把最后补位完成后的数据用16进制写成下面的样子<br>61626380 00000000 00000000 00000000<br>00000000 00000000 00000000 00000000<br>00000000 00000000 00000000 00000000<br>00000000 00000000<br>现在，数据的长度是448了，我们可以进行下一步操作。<br>3.2 补长度<br>所谓的补长度是将原始数据的长度补到已经进行了补位操作的消息后面。通常用一个64位的数据来表示原始消息的长度。如果消息长度不大于2^64，那么第一个字就是0。在进行了补长度的操作以后，整个消息就变成下面这样了（16进制格式）<br>61626380 00000000 00000000 00000000<br>00000000 00000000 00000000 00000000<br>00000000 00000000 00000000 00000000<br>00000000 00000000 00000000 00000018<br>如果原始的消息长度超过了512，我们需要将它补成512的倍数。然后我们把整个消息分成一个一个512位的数据块，分别处理每一个数据块，从而得到消息摘要。<br>3.3 使用的常量<br>一系列的常量字K(0), K(1), … , K(79)，如果以16进制给出。它们如下：<br>Kt = 0x5A827999  (0 &lt;= t &lt;= 19)<br>Kt = 0x6ED9EBA1 (20 &lt;= t &lt;= 39)<br>Kt = 0x8F1BBCDC (40 &lt;= t &lt;= 59)<br>Kt = 0xCA62C1D6 (60 &lt;= t &lt;= 79).<br>3.4 需要使用的函数<br>在SHA1中我们需要一系列的函数。每个函数ft (0 &lt;= t &lt;= 79)都操作32位字B，C，D并且产生32位字作为输出。ft(B,C,D)可以如下定义<br>ft(B,C,D) = (B AND C) or ((NOT B) AND D) ( 0 &lt;= t &lt;= 19)<br>ft(B,C,D) = B XOR C XOR D              (20 &lt;= t &lt;= 39)<br>ft(B,C,D) = (B AND C) or (B AND D) or (C AND D) (40 &lt;= t &lt;= 59)<br>ft(B,C,D) = B XOR C XOR D                     (60 &lt;= t &lt;= 79).<br>3.5 计算消息摘要<br>必须使用进行了补位和补长度后的消息来计算消息摘要。计算需要两个缓冲区，每个都由5个32位的字组成，还需要一个80个32位字的缓冲区。第一个5个字的缓冲区被标识为A，B，C，D，E。第一个5个字的缓冲区被标识为H0, H1, H2, H3, H4<br>。80个字的缓冲区被标识为W0, W1,…, W79</n定义如下：抛弃最左边的n位数字，将各个位依次向左移动n位，然后用0填补右边的n位（最后结果还是32位）。x></n)or(x></p>
<p>另外还需要一个一个字的TEMP缓冲区。<br>为了产生消息摘要，在第4部分中定义的16个字的数据块M1, M2,…, Mn<br>会依次进行处理，处理每个数据块Mi 包含80个步骤。<br>在处理每个数据块之前，缓冲区 被初始化为下面的值（16进制）<br>H0 = 0x67452301<br>H1 = 0xEFCDAB89<br>H2 = 0x98BADCFE<br>H3 = 0x10325476<br>H4 = 0xC3D2E1F0.<br>现在开始处理M1, M2, … , Mn。为了处理 Mi,需要进行下面的步骤<br>(1). 将 Mi 分成 16 个字 W0, W1, … , W15,  W0 是最左边的字<br>(2). 对于 t = 16 到 79 令 Wt = S1(Wt-3 XOR Wt-8 XOR Wt- 14 XOR Wt-16).<br>(3). 令 A = H0, B = H1, C = H2, D = H3, E = H4.<br>(4) 对于 t = 0 到 79，执行下面的循环<br>TEMP = S5(A) + ft(B,C,D) + E + Wt + Kt;<br>E = D; D = C; C = S30(B); B = A; A = TEMP;<br>(5). 令 H0 = H0 + A, H1 = H1 + B, H2 = H2 + C, H3 = H3 + D, H4 = H4 + E.<br>在处理完所有的 Mn, 后，消息摘要是一个160位的字符串，以下面的顺序标识<br>H0 H1 H2 H3 H4.<br>对于SHA256,SHA384,SHA512。你也可以用相似的办法来计算消息摘要。对消息进行补位的算法完全是一样的。</p>
<h2 id="NSString-Encryption-h"><a href="#NSString-Encryption-h" class="headerlink" title="NSString+Encryption.h"></a>NSString+Encryption.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line"></div><div class="line">@interface NSString (Encryption)</div><div class="line">/**</div><div class="line"> *  sha1加密</div><div class="line"> *</div><div class="line"> *  @return 获取加密后的字符串</div><div class="line"> */</div><div class="line">- (NSString *)sha1;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="NSString-Encryption-m"><a href="#NSString-Encryption-m" class="headerlink" title="NSString+Encryption.m"></a>NSString+Encryption.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">#import &quot;NSString+Encryption.h&quot;</div><div class="line">#import &lt;CommonCrypto/CommonDigest.h&gt;</div><div class="line">@implementation NSString (Encryption)</div><div class="line">/**</div><div class="line"> *  sha1加密</div><div class="line"> *</div><div class="line"> *  @return 获取加密后的字符串</div><div class="line"> */</div><div class="line">- (NSString *)sha1 &#123;</div><div class="line">    //  将字符串转换成 C字符串</div><div class="line">    const char *cstr = [self cStringUsingEncoding:NSUTF8StringEncoding];</div><div class="line">    //  C字符串转换成二进制数据</div><div class="line">    NSData *data = [NSData dataWithBytes:cstr length:self.length];</div><div class="line">    </div><div class="line">    unsigned char digest[CC_SHA1_DIGEST_LENGTH];</div><div class="line">    CC_SHA1(data.bytes, (uint32_t)data.length, digest);</div><div class="line">    </div><div class="line">    NSMutableString *encryptionString = [NSMutableString stringWithCapacity:CC_SHA1_DIGEST_LENGTH * 2];</div><div class="line">    </div><div class="line">    for (int i = 0; i &lt; CC_SHA1_DIGEST_LENGTH; i++) &#123;</div><div class="line">        [encryptionString appendFormat:@&quot;%02x&quot;, digest[i]];</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    return encryptionString;</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记14-MD5+base64加密]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B014-MD5-base64%E5%8A%A0%E5%AF%86/</url>
      <content type="html"><![CDATA[<h2 id="NSString-Encryption-h"><a href="#NSString-Encryption-h" class="headerlink" title="NSString+Encryption.h"></a>NSString+Encryption.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line"></div><div class="line">@interface NSString (Encryption)</div><div class="line">/**</div><div class="line"> *  md5+base64加密</div><div class="line"> *</div><div class="line"> *  @return 获取加密后的字符串</div><div class="line"> */</div><div class="line">- (NSString *)md5_base64;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="NSString-Encryption-m"><a href="#NSString-Encryption-m" class="headerlink" title="NSString+Encryption.m"></a>NSString+Encryption.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">#import &quot;NSString+Encryption.h&quot;</div><div class="line">#import &quot;GTMBase64.h&quot;</div><div class="line">@implementation NSString (Encryption)</div><div class="line">/**</div><div class="line"> *  md5+base64加密</div><div class="line"> *</div><div class="line"> *  @return 获取加密后的字符串</div><div class="line"> */</div><div class="line">- (NSString *)md5_base64 &#123;</div><div class="line">    </div><div class="line">    const char *cStr = [self UTF8String];</div><div class="line">    unsigned char digest[CC_MD5_DIGEST_LENGTH];</div><div class="line">    CC_MD5(cStr, (uint32_t)strlen(cStr), digest);</div><div class="line">    </div><div class="line">    NSData *base64 = [[NSData alloc] initWithBytes:digest length:CC_MD5_DIGEST_LENGTH];</div><div class="line">    base64 = [GTMBase64 encodeData:base64];</div><div class="line">    </div><div class="line">    NSString *encryptionString = [[NSString alloc] initWithData:base64 encoding:NSUTF8StringEncoding];</div><div class="line">    </div><div class="line">    return encryptionString;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记13-字符串MD5加密]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B013-%E5%AD%97%E7%AC%A6%E4%B8%B2MD5%E5%8A%A0%E5%AF%86/</url>
      <content type="html"><![CDATA[<h2 id="NSString-SKExtension-h"><a href="#NSString-SKExtension-h" class="headerlink" title="NSString+SKExtension.h"></a>NSString+SKExtension.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line"></div><div class="line">@interface NSString (SKExtension)</div><div class="line">-(NSString *)md5;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="NSString-SKExtension-m"><a href="#NSString-SKExtension-m" class="headerlink" title="NSString+SKExtension.m"></a>NSString+SKExtension.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">#import &quot;NSString+SKExtension.h&quot;</div><div class="line">@implementation NSString (SKExtension)</div><div class="line">/**</div><div class="line"> *  md5加密</div><div class="line"> *</div><div class="line"> *  @return 获取加密后的字符串</div><div class="line"> */</div><div class="line">- (NSString *)md5 &#123;</div><div class="line">    </div><div class="line">    //  将传入OC字符串转换成C字符串</div><div class="line">    const char *cStr = [self UTF8String];</div><div class="line">    //  无符号字符数组 16位</div><div class="line">    unsigned char digest[CC_MD5_DIGEST_LENGTH];</div><div class="line">    CC_MD5(cStr, (uint32_t)strlen(cStr), digest);</div><div class="line">    </div><div class="line">    NSMutableString *encryptionString = [NSMutableString stringWithCapacity:CC_MD5_DIGEST_LENGTH *2];</div><div class="line">    </div><div class="line">    for (int i = 0; i &lt; CC_MD5_DIGEST_LENGTH; i++) &#123;</div><div class="line">        //  将转换后的字符转换成16进制, 02表示不足两位前面补0,  例如 &quot;a&quot; -&gt; &quot;0a&quot;,  &quot;3&quot; -&gt; &quot;03&quot;</div><div class="line">        [encryptionString appendFormat:@&quot;%02x&quot;,digest[i]];</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    return encryptionString;</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记12-号码正则表达式判断]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B012-%E5%8F%B7%E7%A0%81%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%88%A4%E6%96%AD/</url>
      <content type="html"><![CDATA[<h2 id="NSString-ExaminePhoneNum-h"><a href="#NSString-ExaminePhoneNum-h" class="headerlink" title="NSString+ExaminePhoneNum.h"></a>NSString+ExaminePhoneNum.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line"></div><div class="line">@interface NSString (ExaminePhoneNum)</div><div class="line">- (BOOL)examineStrIsPhoneNum;</div><div class="line">- (BOOL)examineStrIsFixedPhone;</div><div class="line">- (BOOL)examineStrIs400Phone;</div><div class="line">- (BOOL)examineStrIs800Phone;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="NSString-ExaminePhoneNum-m"><a href="#NSString-ExaminePhoneNum-m" class="headerlink" title="NSString+ExaminePhoneNum.m"></a>NSString+ExaminePhoneNum.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">#import &quot;NSString+ExaminePhoneNum.h&quot;</div><div class="line">@implementation NSString (ExaminePhoneNum)</div><div class="line">// 判断是否是手机号</div><div class="line">- (BOOL)examineStrIsPhoneNum &#123;</div><div class="line">    NSString *regex = @&quot;^((13)|(14)|(15)|(17)|(18))\\d&#123;9&#125;$&quot;;//^1[3-5,7,8]&#123;1&#125;[0-9]&#123;9&#125;</div><div class="line">    </div><div class="line">    NSPredicate *pred = [NSPredicate predicateWithFormat:@&quot;SELF MATCHES %@&quot;, regex];</div><div class="line">    </div><div class="line">    return [pred evaluateWithObject:self];</div><div class="line">&#125;</div><div class="line">// 判断是否是电话</div><div class="line">- (BOOL)examineStrIsFixedPhone &#123;</div><div class="line">    NSString *regex = @&quot;0\\d&#123;2,3&#125;\\d&#123;5,9&#125;|0\\d&#123;2,3&#125;\\d&#123;5,9&#125;&quot;;</div><div class="line">    </div><div class="line">    NSPredicate *pred = [NSPredicate predicateWithFormat:@&quot;SELF MATCHES %@&quot;, regex];</div><div class="line">    </div><div class="line">    return [pred evaluateWithObject:self];</div><div class="line">&#125;</div><div class="line">// 判断是否是400电话</div><div class="line">- (BOOL)examineStrIs400Phone&#123;</div><div class="line">    NSString *regex = @&quot;^400[0-9]&#123;7&#125;&quot;;</div><div class="line">    NSPredicate *pred = [NSPredicate predicateWithFormat:@&quot;SELF MATCHES %@&quot;,regex];</div><div class="line">    return [pred evaluateWithObject:self];</div><div class="line">&#125;</div><div class="line">// 判断是否是800电话</div><div class="line">- (BOOL)examineStrIs800Phone&#123;</div><div class="line">    NSString *regex = @&quot;^800[0-9]&#123;7&#125;&quot;;</div><div class="line">    NSPredicate *pred = [NSPredicate predicateWithFormat:@&quot;SELF MATCHES %@&quot;,regex];</div><div class="line">    return [pred evaluateWithObject:self];</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记11-hex颜色转换]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B011-hex%E9%A2%9C%E8%89%B2%E8%BD%AC%E6%8D%A2/</url>
      <content type="html"><![CDATA[<h2 id="UIColor-SKExtension-h"><a href="#UIColor-SKExtension-h" class="headerlink" title="UIColor+SKExtension.h"></a>UIColor+SKExtension.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#import &lt;UIKit/UIKit.h&gt;</div><div class="line"></div><div class="line">@interface UIColor (SKExtension)</div><div class="line">+ (UIColor *)colorWithHex:(NSInteger)hexValue;</div><div class="line">+ (UIColor *)colorWithHexString:(NSString *)color;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="UIColor-SKExtension-m"><a href="#UIColor-SKExtension-m" class="headerlink" title="UIColor+SKExtension.m"></a>UIColor+SKExtension.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line">#import &quot;UIColor+SKExtension.h&quot;</div><div class="line"></div><div class="line">@implementation UIColor (SKExtension)</div><div class="line"></div><div class="line">+ (UIColor*) colorWithHex:(NSInteger)hexValue&#123;</div><div class="line">    return [UIColor  colorWithRed:((float)((hexValue &amp; 0xFF0000) &gt;&gt; 16))/255.0</div><div class="line">                            green:((float)((hexValue &amp; 0x00FF00) &gt;&gt; 8))/255.0</div><div class="line">                             blue:((float)(hexValue &amp; 0x0000FF))/255.0</div><div class="line">                            alpha:1.0];</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">+ (UIColor *) colorWithHexString: (NSString *)color</div><div class="line">&#123;</div><div class="line">    NSString *cString = [[color stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]] uppercaseString];</div><div class="line">    </div><div class="line">    // 应该是6或8个字符</div><div class="line">    if ([cString length] &lt; 6) &#123;</div><div class="line">        return [UIColor clearColor];</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    // 去除0X</div><div class="line">    if ([cString hasPrefix:@&quot;0X&quot;])</div><div class="line">        cString = [cString substringFromIndex:2];</div><div class="line">    if ([cString hasPrefix:@&quot;#&quot;])</div><div class="line">        cString = [cString stringByReplacingOccurrencesOfString:@&quot;#&quot; withString:@&quot;&quot;];</div><div class="line">    //        cString = [cString substringFromIndex:1];</div><div class="line">    if ([cString length] != 6)</div><div class="line">        return [UIColor clearColor];</div><div class="line">    </div><div class="line">    // Separate into r, g, b substrings</div><div class="line">    NSRange range;</div><div class="line">    range.location = 0;</div><div class="line">    range.length = 2;</div><div class="line">    </div><div class="line">    //r</div><div class="line">    NSString *rString = [cString substringWithRange:range];</div><div class="line">    </div><div class="line">    //g</div><div class="line">    range.location = 2;</div><div class="line">    NSString *gString = [cString substringWithRange:range];</div><div class="line">    </div><div class="line">    //b</div><div class="line">    range.location = 4;</div><div class="line">    NSString *bString = [cString substringWithRange:range];</div><div class="line">    </div><div class="line">    // Scan values</div><div class="line">    unsigned int r, g, b;</div><div class="line">    [[NSScanner scannerWithString:rString] scanHexInt:&amp;r];</div><div class="line">    [[NSScanner scannerWithString:gString] scanHexInt:&amp;g];</div><div class="line">    [[NSScanner scannerWithString:bString] scanHexInt:&amp;b];</div><div class="line">    </div><div class="line">    return [UIColor colorWithRed:((float) r / 255.0f) green:((float) g / 255.0f) blue:((float) b / 255.0f) alpha:1.0f];</div><div class="line">&#125;</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记10-创建自定义按钮]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B010-%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%89%E9%92%AE/</url>
      <content type="html"><![CDATA[<h2 id="SKCustomButton-h"><a href="#SKCustomButton-h" class="headerlink" title="SKCustomButton.h"></a>SKCustomButton.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#import &lt;UIKit/UIKit.h&gt;</div><div class="line"></div><div class="line">@interface SKCustomButton : UIButton</div><div class="line"></div><div class="line">/** 初始化方法 */</div><div class="line">- (instancetype)initWithFrame:(CGRect)frame;</div><div class="line">/** 类方法创建按钮 */</div><div class="line">+ (instancetype)creatCustomButtonWithImage:(NSString *)imageName title:(NSString *)title;</div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="SKCustomButton-m"><a href="#SKCustomButton-m" class="headerlink" title="SKCustomButton.m"></a>SKCustomButton.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">#import &quot;SKCustomButton.h&quot;</div><div class="line"></div><div class="line">@implementation SKCustomButton</div><div class="line">// 初始化</div><div class="line">- (instancetype)initWithFrame:(CGRect)frame&#123;</div><div class="line">    </div><div class="line">    if (self = [super initWithFrame:frame]) &#123;</div><div class="line">        self.titleLabel.textAlignment = NSTextAlignmentCenter;</div><div class="line">    &#125;</div><div class="line">    return self;</div><div class="line">&#125;</div><div class="line">// 创建自定义按钮</div><div class="line">+ (instancetype)creatCustomButtonWithImage:(NSString *)imageName title:(NSString *)title&#123;</div><div class="line">    </div><div class="line">    SKCustomButton *button = [[SKCustomButton alloc] init];</div><div class="line">    [button setImage:[UIImage imageNamed:[NSString stringWithFormat:@&quot;%@&quot;,imageName]] forState:(UIControlStateNormal)];</div><div class="line">    [button setTitle:title forState:(UIControlStateNormal)];</div><div class="line">    [button setTitleColor:[UIColor whiteColor] forState:(UIControlStateNormal)];</div><div class="line">    [button setBackgroundColor:[UIColor blackColor]];</div><div class="line">    button.titleLabel.font = [UIFont systemFontOfSize:10.0];</div><div class="line">    [button sizeToFit];// 自适应</div><div class="line">    return button;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/**</div><div class="line"> *  在viewWillApear之后，在viewDidApear之前执行</div><div class="line"> *  将button上的image和titleLabel进行上下结构布局</div><div class="line"> */</div><div class="line">// 重新布局子视图</div><div class="line">- (void)layoutSubviews&#123;</div><div class="line">    [super layoutSubviews];</div><div class="line">    </div><div class="line">    // 设置控件大小、间距</div><div class="line">    CGFloat imageViewSize = self.bounds.size.width * 18 / 138.0;// 高、宽一样</div><div class="line">    CGFloat centerX = self.bounds.size.width * 0.5;</div><div class="line">    // 设置imageView和titleLabel的间距</div><div class="line">    // 获取Label的高度</div><div class="line">    CGFloat labelHeight = self.titleLabel.font.lineHeight;</div><div class="line">    CGFloat verticalMargin = (self.bounds.size.height - labelHeight - imageViewSize) / 2.0;// 间隙</div><div class="line">    // 获取imageView和titleLabel 中心的Y值</div><div class="line">    CGFloat centerYOfImageView = verticalMargin + imageViewSize * 0.5;</div><div class="line">    CGFloat centerYOfTitleLabel = verticalMargin + imageViewSize + labelHeight * 0.5;</div><div class="line">    // 确定最终位置</div><div class="line">    self.imageView.bounds = CGRectMake(0, 0, imageViewSize, imageViewSize);</div><div class="line">    self.imageView.center = CGPointMake(centerX, centerYOfImageView);</div><div class="line">    self.titleLabel.center = CGPointMake(centerX, centerYOfTitleLabel);</div><div class="line">&#125;</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记9-宏颜色]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B09-%E5%AE%8F%E9%A2%9C%E8%89%B2/</url>
      <content type="html"><![CDATA[<h2 id="SKColor-h"><a href="#SKColor-h" class="headerlink" title="SKColor.h"></a>SKColor.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">#ifndef SKColor_h</div><div class="line">#define SKColor_h</div><div class="line"></div><div class="line">// 设置随机颜色</div><div class="line">#define SKRandomColor [UIColor colorWithRed:arc4random()%256 / 255.0 green:arc4random()%256 /255.0 blue:arc4random()%256 / 255.0 alpha:1]</div><div class="line"></div><div class="line">// 设置RGB颜色</div><div class="line">#define SKRGBColor(r,g,b) [UIColor colorWithRed:(r) / 255.0 green:(g) /255.0 blue:(b) / 255.0 alpha:1]</div><div class="line">// 设置RGBA颜色</div><div class="line">#define SKRGBAColor(r,g,b,a) [UIColor colorWithRed:(r) / 255.0 green:(g) /255.0 blue:(b) / 255.0 alpha:a]</div><div class="line"></div><div class="line">// 清除背景色</div><div class="line">#define SKClearColor [UIColor clearColor]</div><div class="line"></div><div class="line">#endif /* SKColor_h */</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记8-宏数据持久化]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B08-%E5%AE%8F%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/</url>
      <content type="html"><![CDATA[<h2 id="SKConfig-h"><a href="#SKConfig-h" class="headerlink" title="SKConfig.h"></a>SKConfig.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">#ifndef SKConfig_h</div><div class="line">#define SKConfig_h</div><div class="line"></div><div class="line">// 存储对象类型</div><div class="line">#define kUserDefaults(obj, key) \</div><div class="line">[[NSUserDefaults standardUserDefaults] setObject:obj forKey:key]</div><div class="line">// 存储布尔类型</div><div class="line">#define kBoolUserDefaults(value, key) \</div><div class="line">[[NSUserDefaults standardUserDefaults] setBool:value forKey:key]</div><div class="line">// 存储Integer类型</div><div class="line">#define kIntegerUserDefaults(integer, key) \</div><div class="line">[[NSUserDefaults standardUserDefaults] setInteger:integer forKey:key]</div><div class="line"></div><div class="line"></div><div class="line">// 获取对象类型</div><div class="line">#define kGetObjectUserDefaults(key) \</div><div class="line">[[NSUserDefaults standardUserDefaults] objectForKey:key]</div><div class="line">// 获取BOOL类型值</div><div class="line">#define kGetBoolUserDefaults(key) \</div><div class="line">[[NSUserDefaults standardUserDefaults] boolForKey:key]</div><div class="line">// 获取Value类型值</div><div class="line">#define kGetValueUserDefaults(key) \</div><div class="line">[[NSUserDefaults standardUserDefaults] valueForKey:key]</div><div class="line"></div><div class="line">// 移除本地持久化</div><div class="line">#define kRemoveObjectForKey(key) \</div><div class="line">[[NSUserDefaults standardUserDefaults] removeObjectForKey:key]</div><div class="line"></div><div class="line">#endif /* SKConfig_h */</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记7-完整单例]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B07-%E5%AE%8C%E6%95%B4%E5%8D%95%E4%BE%8B/</url>
      <content type="html"><![CDATA[<h2 id="SKSingleton-m"><a href="#SKSingleton-m" class="headerlink" title="SKSingleton.m"></a>SKSingleton.m</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line"></div><div class="line">@interface XSKSingleton : NSObject&lt;NSCopying,NSMutableCopying&gt;</div><div class="line"></div><div class="line">/**</div><div class="line"> *  系统并没有提供专门的方法来创建单例类，若想设计一个单例类，必须自己创建新的方法或者复写系统原有的方法。</div><div class="line"> */</div><div class="line"></div><div class="line">+ (instancetype)sharedSingleton;</div><div class="line"></div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
<h2 id="SKSingleton-h"><a href="#SKSingleton-h" class="headerlink" title="SKSingleton.h"></a>SKSingleton.h</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div></pre></td><td class="code"><pre><div class="line">#import &quot;XSKSingleton.h&quot;</div><div class="line"></div><div class="line">@implementation XSKSingleton</div><div class="line"></div><div class="line">// 创建静态区指针，避免栈区指针被不定性的回收</div><div class="line">// 1.编译器不允许</div><div class="line">// 2.如果没用到，造成内存浪费</div><div class="line"></div><div class="line">/**</div><div class="line"> *  static修饰的语句在程序中只执行一次</div><div class="line"> */</div><div class="line">static XSKSingleton *singleton = nil;</div><div class="line">+ (instancetype)sharedSingleton&#123;</div><div class="line">   </div><div class="line">    // 真正的单例，第二种写法</div><div class="line">    </div><div class="line">    // static修饰的语句只执行一次，不再走第二次</div><div class="line">    // static修饰的语句在静态区，不能被外文件使用。只能在本文件使用</div><div class="line">    </div><div class="line">    // dispatch_once_t线程的一次队列。dispatch_once添加的任务只执行一次，就再也不会执行</div><div class="line">    </div><div class="line">    /**</div><div class="line">     *  onceToken由static修饰，保证了唯一性</div><div class="line">     *  dispatch_once向onceToken中添加的任务，只会执行一次。</div><div class="line">     *  综上，一个实例若是在任务中创建，那么只会创建一个唯一的实例</div><div class="line">     */</div><div class="line">    static dispatch_once_t onceToken;</div><div class="line">    dispatch_once(&amp;onceToken, ^&#123;</div><div class="line">        singleton = [self new];</div><div class="line">    &#125;);</div><div class="line">    return singleton;</div><div class="line">&#125;</div><div class="line">#warning &quot;一个人开发的时候，可以不用实现以下方法，只使用以上伪单例就可以了&quot;</div><div class="line">// 重写是为了保证对象的唯一性</div><div class="line"></div><div class="line">// 每次外界在使用alloc来创建对象时，系统会使用allocWithZone来进行对象的创建过程</div><div class="line">// 系统会用NSZone来开辟空间，类似copy</div><div class="line">+ (instancetype)allocWithZone:(struct _NSZone *)zone&#123;</div><div class="line">    </div><div class="line"></div><div class="line">    </div><div class="line">    // 父类是NSObject，调用子类的东西，没有递归关系</div><div class="line">    // self是自己调自己，会造成递归循环</div><div class="line">    </div><div class="line">    // 这个方法造成多线程</div><div class="line">//    if (!singleton) &#123;</div><div class="line">//        singleton = [super allocWithZone:zone];</div><div class="line">//    &#125;</div><div class="line">//    return singleton;</div><div class="line">    </div><div class="line">    // 为避免递归调用方法，我们复写alloc时，必须使用super来执行开辟空间的方法，将结果返回给当前实例，防止递归造成死循环。</div><div class="line">    // 在保证对象唯一性的前提下，若有多线程参与，必须对被访问的资源加锁，保证同一时间只有一个任务在生产实例对象。</div><div class="line">    </div><div class="line">    // 当访问到singleton对象时，写在大括号内部的代码会被保证同一时间只有一个任务在访问。</div><div class="line">    // atomic是线程安全的，使用@synchronized进行对对象的加锁操作，但是只能是对象类型</div><div class="line">    // @synchronized自动对参数对象加锁，保证临界区内的代码线程安全</div><div class="line">    @synchronized (singleton) &#123;</div><div class="line">        if (!singleton) &#123;</div><div class="line">            singleton = [super allocWithZone:zone];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return singleton;</div><div class="line">&#125;</div><div class="line"></div><div class="line">// NSArray的alloc，init会造成地址错位【只有这一个】:因此，使用数组的时候尽量使用便利构造器。使用系统类的时候也是</div><div class="line"></div><div class="line">// 为了安全【地址】，重写init</div><div class="line">/**</div><div class="line"> *  一般情况下，自定义的类不会发生alloc和init出现地址差的因素，但是某些系统类，比如NSMutableArray在开辟空间初始化时使用了不同的地址。</div><div class="line"> */</div><div class="line">- (instancetype)init&#123;</div><div class="line">    @synchronized (self) &#123;</div><div class="line">        self = [super init];</div><div class="line">    &#125;</div><div class="line">    return self;</div><div class="line">&#125;</div><div class="line"></div><div class="line">// new不需要重写，因为new生产对象的过程为alloc + init</div><div class="line"></div><div class="line">/**</div><div class="line"> *  在ARC情况下，不需要考虑retain/release/autorelease/retainCount等相关操作对当前对象造成的内存影响，但是copy仍需要覆写，保证对象的唯一性</div><div class="line"> */</div><div class="line">// 遵循NSCopying，NSMutableCopying协议</div><div class="line">// 防止copy的深拷贝</div><div class="line">- (id)copy&#123;</div><div class="line">    // 直接返回本身，不允许进行新空间的开辟【浅拷贝】</div><div class="line">    return self;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (id)mutableCopy&#123;</div><div class="line">    // 直接返回本身，不允许进行新空间的开辟【浅拷贝】</div><div class="line">    return self;</div><div class="line">&#125;</div><div class="line"></div><div class="line">// 实现代理方法</div><div class="line">- (id)copyWithZone:(NSZone *)zone&#123;</div><div class="line">    </div><div class="line">    return self;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (id)mutableCopyWithZone:(NSZone *)zone&#123;</div><div class="line">    </div><div class="line">    return self;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记6-宏单例]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B06-%E5%AE%8F%E5%8D%95%E4%BE%8B/</url>
      <content type="html"><![CDATA[<h2 id="SKSingleton"><a href="#SKSingleton" class="headerlink" title="SKSingleton"></a>SKSingleton</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">#ifndef SKSingleton_h</div><div class="line">#define SKSingleton_h</div><div class="line"></div><div class="line">/** 单例声明 */</div><div class="line">#define skSingleton_interface(className) \</div><div class="line">+ (instancetype)shared##className</div><div class="line"></div><div class="line">/** 单例实现 */</div><div class="line">#define skSingleton_impplementation(className) \</div><div class="line">static className * manager; \</div><div class="line">+ (instancetype)shared##className&#123; \</div><div class="line">    static dispatch_once_t onceToken; \</div><div class="line">    dispatch_once(&amp;onceToken, ^&#123; \</div><div class="line">        manager = [[[self class] alloc] init]; \</div><div class="line">    &#125;); \</div><div class="line">    return manager; \</div><div class="line">&#125;</div><div class="line"></div><div class="line">#endif /* SKSingleton_h */</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记5-创建色块图片]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B05-%E5%88%9B%E5%BB%BA%E8%89%B2%E5%9D%97%E5%9B%BE%E7%89%87/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">#import &lt;UIKit/UIKit.h&gt;</div><div class="line"></div><div class="line">@interface UIImage (SKExtension)</div><div class="line"></div><div class="line">/**</div><div class="line"> *  创建色块图片</div><div class="line"> *</div><div class="line"> *  @param color 填充颜色</div><div class="line"> *</div><div class="line"> *  @return 图片</div><div class="line"> */</div><div class="line">+ (UIImage *)imageWithColor:(UIColor *)color;</div><div class="line">@end</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">#import &quot;UIImage+SKExtension.h&quot;</div><div class="line"></div><div class="line">@implementation UIImage (SKExtension)</div><div class="line"></div><div class="line">// 创建色块图片</div><div class="line">+ (UIImage *)imageWithColor:(UIColor *)color&#123;</div><div class="line">    </div><div class="line">    CGRect rect = CGRectMake(0, 0, 1, 1);</div><div class="line">    </div><div class="line">    // 绘制图片</div><div class="line">    UIGraphicsBeginImageContextWithOptions(rect.size, NO, 0);// 开始</div><div class="line">    </div><div class="line">    [color setFill];// 设置填充颜色</div><div class="line">    UIRectFill(rect);// 填充颜色</div><div class="line">    UIImage * image = UIGraphicsGetImageFromCurrentImageContext();// 获取图片</div><div class="line">    UIGraphicsEndImageContext();// 结束</div><div class="line">    </div><div class="line">    return image;</div><div class="line">&#125;</div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记4-快速创建MVC目录结构脚本]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B04-%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BAMVC%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E8%84%9A%E6%9C%AC/</url>
      <content type="html"><![CDATA[<h2 id="makeProjectDir-sh"><a href="#makeProjectDir-sh" class="headerlink" title="makeProjectDir.sh"></a>makeProjectDir.sh</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">#! /bin/bash</div><div class="line"></div><div class="line"># &quot;#&quot; 是注释</div><div class="line">#在哪儿执行这个脚本,下面的文件夹就创建在哪儿</div><div class="line"></div><div class="line">#shell脚本</div><div class="line">#创建一个classes文件夹并且进入这个文件夹</div><div class="line">mkdir classes &amp;&amp; cd classes</div><div class="line">#在进入的classes文件夹中依次创建下面几个文件夹</div><div class="line">mkdir Appdelegate General Helpers Marco Models Resources Scenes Vendors</div><div class="line"></div><div class="line">#当前路径是在classess里面,要取到上一级(..)的Appdelegate文件,移动到classess下的Appdelegate文件夹</div><div class="line">#mv 原文件 目的文件</div><div class="line">mv ../AppDelegate.h Appdelegate/AppDelegate.h</div><div class="line">mv ../AppDelegate.m Appdelegate/AppDelegate.m</div><div class="line">#echo 在终端输出一段文字</div><div class="line">echo &quot;创建项目文件夹成功&quot;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记3-创建文件夹脚本]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B03-%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9%E8%84%9A%E6%9C%AC/</url>
      <content type="html"><![CDATA[<h2 id="makeModule-sh"><a href="#makeModule-sh" class="headerlink" title="makeModule.sh"></a>makeModule.sh</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"># !/bin/bash</div><div class="line"></div><div class="line">#判断是否传入一个参数</div><div class="line">#$1 是调用脚本时传进来的第一个参数</div><div class="line"># shell 中的脚本 判断if 时需要和test 组合起来</div><div class="line"># test 不是 text</div><div class="line">if test $1</div><div class="line">then</div><div class="line">	#判断结果是yes 会执行这儿</div><div class="line">	mkdir $1</div><div class="line">	cd $1</div><div class="line">	mkdir Views Models Controllers</div><div class="line">	echo &quot;$1模块创建成功&quot;</div><div class="line">else</div><div class="line">	#判断结果是no 会执行这儿</div><div class="line">	echo &quot;Error!!!!!缺少一个模块名称&quot;</div><div class="line">fi</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记2-图片压缩]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B02-%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/</url>
      <content type="html"><![CDATA[<h2 id="指定宽度按比例缩放"><a href="#指定宽度按比例缩放" class="headerlink" title="指定宽度按比例缩放"></a>指定宽度按比例缩放</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">#import &lt;UIKit/UIKit.h&gt;</div><div class="line"></div><div class="line">@interface UIImage (compressedWithWidth)</div><div class="line">/**</div><div class="line"> *  图片的压缩方法</div><div class="line"> *</div><div class="line"> *  @param sourceImg   要被压缩的图片</div><div class="line"> *  @param defineWidth 要被压缩的尺寸(宽)</div><div class="line"> *</div><div class="line"> *  @return 被压缩的图片</div><div class="line"> */</div><div class="line">+ (UIImage *)imgCompressed:(UIImage *)sourceImg targetWidth:(CGFloat)defineWidth;</div><div class="line">@end</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">#import &quot;UIImage+compressedWithWidth.h&quot;</div><div class="line"></div><div class="line">@implementation UIImage (compressedWithWidth)</div><div class="line">// 图片压缩方法</div><div class="line">+ (UIImage *)imgCompressed:(UIImage *)sourceImg targetWidth:(CGFloat)defineWidth&#123;</div><div class="line">    </div><div class="line">    UIImage *newImage = nil;</div><div class="line">    </div><div class="line">    CGSize imageSize = sourceImg.size;</div><div class="line">    CGFloat width = imageSize.width;</div><div class="line">    CGFloat height = imageSize.height;</div><div class="line">    </div><div class="line">    CGFloat targetWidth = defineWidth;</div><div class="line">    CGFloat targetHeight = height / (width / targetWidth);</div><div class="line">    </div><div class="line">    CGSize size = CGSizeMake(targetWidth, targetHeight);</div><div class="line">    CGFloat scaleFactor = 0.0;</div><div class="line">    CGFloat scaledWidth = targetWidth;</div><div class="line">    CGFloat scaledHeight = targetHeight;</div><div class="line">    </div><div class="line">    CGPoint thumbnailPoint = CGPointMake(0.0, 0.0);</div><div class="line">    </div><div class="line">    if (CGSizeEqualToSize(imageSize, size) == NO) &#123;</div><div class="line">        CGFloat widthFactor = targetWidth / width;</div><div class="line">        CGFloat heightFactor = targetHeight / height;</div><div class="line">        if (widthFactor &gt; heightFactor) &#123;</div><div class="line">            scaleFactor = widthFactor;</div><div class="line">        &#125;else&#123;</div><div class="line">            scaleFactor = heightFactor;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        scaledWidth = width * scaleFactor;</div><div class="line">        scaledHeight = height * scaleFactor;</div><div class="line">        </div><div class="line">        if (widthFactor &gt; heightFactor) &#123;</div><div class="line">            thumbnailPoint.y = (targetHeight - scaledHeight) * 0.5;</div><div class="line">        &#125;else if (widthFactor &lt; heightFactor)&#123;</div><div class="line">            thumbnailPoint.x = (targetWidth - scaledWidth) * 0.5;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    UIGraphicsBeginImageContext(size);</div><div class="line">    CGRect thumbnailRect = CGRectZero;</div><div class="line">    thumbnailRect.origin = thumbnailPoint;</div><div class="line">    thumbnailRect.size.width = scaledWidth;</div><div class="line">    thumbnailRect.size.height = scaledHeight;</div><div class="line">    </div><div class="line">    [sourceImg drawInRect:thumbnailRect];</div><div class="line">    </div><div class="line">    newImage = UIGraphicsGetImageFromCurrentImageContext();</div><div class="line">    </div><div class="line">    if (newImage == nil) &#123;</div><div class="line">        NSAssert(!newImage, @&quot;图片压缩失败&quot;);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    UIGraphicsEndImageContext();</div><div class="line">    </div><div class="line">    return newImage;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开发手记1-图片颜色获取]]></title>
      <url>http://yoursite.com/2016/11/14/%E5%BC%80%E5%8F%91%E6%89%8B%E8%AE%B01-%E5%9B%BE%E7%89%87%E9%A2%9C%E8%89%B2%E8%8E%B7%E5%8F%96/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">#import &lt;UIKit/UIKit.h&gt;</div><div class="line"></div><div class="line">@interface UIImage (getBackColorToChangeBorderColor)</div><div class="line">/**</div><div class="line"> *  出现最多的颜色</div><div class="line"> *</div><div class="line"> *  @return color</div><div class="line"> */</div><div class="line">- (UIColor *)mostColor;</div><div class="line">/**</div><div class="line"> *  是否是亮色</div><div class="line"> *</div><div class="line"> *  @param clr color</div><div class="line"> *</div><div class="line"> *  @return BOOL</div><div class="line"> */</div><div class="line">- (BOOL)isLightColor:(UIColor*)clr;</div><div class="line">@end</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div></pre></td><td class="code"><pre><div class="line">#import &quot;UIImage+getBackColorToChangeBorderColor.h&quot;</div><div class="line"></div><div class="line">@implementation UIImage (getBackColorToChangeBorderColor)</div><div class="line">- (UIColor *)mostColor&#123;</div><div class="line">    </div><div class="line">    </div><div class="line">#if __IPHONE_OS_VERSION_MAX_ALLOWED &gt; __IPHONE_6_1</div><div class="line">    int bitmapInfo = kCGBitmapByteOrderDefault | kCGImageAlphaPremultipliedLast;</div><div class="line">#else</div><div class="line">    int bitmapInfo = kCGImageAlphaPremultipliedLast;</div><div class="line">#endif</div><div class="line">    </div><div class="line">    //第一步 先把图片缩小 加快计算速度. 但越小结果误差可能越大</div><div class="line">    CGSize thumbSize=CGSizeMake(50, 50);</div><div class="line">    </div><div class="line">    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();</div><div class="line">    CGContextRef context = CGBitmapContextCreate(NULL,</div><div class="line">                                                 thumbSize.width,</div><div class="line">                                                 thumbSize.height,</div><div class="line">                                                 8,//bits per component</div><div class="line">                                                 thumbSize.width*4,</div><div class="line">                                                 colorSpace,</div><div class="line">                                                 bitmapInfo);</div><div class="line">    </div><div class="line">    CGRect drawRect = CGRectMake(0, 0, thumbSize.width, thumbSize.height);</div><div class="line">    CGContextDrawImage(context, drawRect, self.CGImage);</div><div class="line">    CGColorSpaceRelease(colorSpace);</div><div class="line">    </div><div class="line">    </div><div class="line">    </div><div class="line">    //第二步 取每个点的像素值</div><div class="line">    unsigned char* data = CGBitmapContextGetData (context);</div><div class="line">    </div><div class="line">    if (data == NULL) return nil;</div><div class="line">    </div><div class="line">    NSCountedSet *cls=[NSCountedSet setWithCapacity:thumbSize.width*thumbSize.height];</div><div class="line">    </div><div class="line">    for (int x=0; x&lt;thumbSize.width; x++) &#123;</div><div class="line">        for (int y=0; y&lt;thumbSize.height; y++) &#123;</div><div class="line">            </div><div class="line">            int offset = 4*(x*y);</div><div class="line">            </div><div class="line">            int red = data[offset];</div><div class="line">            int green = data[offset+1];</div><div class="line">            int blue = data[offset+2];</div><div class="line">            int alpha =  data[offset+3];</div><div class="line">            </div><div class="line">            NSArray *clr=@[@(red),@(green),@(blue),@(alpha)];</div><div class="line">            [cls addObject:clr];</div><div class="line">            </div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    CGContextRelease(context);</div><div class="line">    </div><div class="line">    //第三步 找到出现次数最多的那个颜色</div><div class="line">    NSEnumerator *enumerator = [cls objectEnumerator];</div><div class="line">    NSArray *curColor = nil;</div><div class="line">    </div><div class="line">    NSArray *MaxColor=nil;</div><div class="line">    NSUInteger MaxCount=0;</div><div class="line">    </div><div class="line">    while ( (curColor = [enumerator nextObject]) != nil )</div><div class="line">    &#123;</div><div class="line">        NSUInteger tmpCount = [cls countForObject:curColor];</div><div class="line">        </div><div class="line">        if ( tmpCount &lt; MaxCount ) continue;</div><div class="line">        </div><div class="line">        MaxCount=tmpCount;</div><div class="line">        MaxColor=curColor;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    return [UIColor colorWithRed:([MaxColor[0] intValue]/255.0f) green:([MaxColor[1] intValue]/255.0f) blue:([MaxColor[2] intValue]/255.0f) alpha:([MaxColor[3] intValue]/255.0f)];</div><div class="line">&#125;</div><div class="line">//获取RGB值</div><div class="line">- (void)getRGBComponents:(CGFloat [3])components forColor:(UIColor *)color &#123;</div><div class="line">#if __IPHONE_OS_VERSION_MAX_ALLOWED &gt; __IPHONE_6_1</div><div class="line">    int bitmapInfo = kCGBitmapByteOrderDefault | kCGImageAlphaPremultipliedLast;</div><div class="line">#else</div><div class="line">    int bitmapInfo = kCGImageAlphaPremultipliedLast;</div><div class="line">#endif</div><div class="line">    </div><div class="line">    CGColorSpaceRef rgbColorSpace = CGColorSpaceCreateDeviceRGB();</div><div class="line">    unsigned char resultingPixel[4];</div><div class="line">    CGContextRef context = CGBitmapContextCreate(&amp;resultingPixel,</div><div class="line">                                                 1,</div><div class="line">                                                 1,</div><div class="line">                                                 8,</div><div class="line">                                                 4,</div><div class="line">                                                 rgbColorSpace,</div><div class="line">                                                 bitmapInfo);</div><div class="line">    CGContextSetFillColorWithColor(context, [color CGColor]);</div><div class="line">    CGContextFillRect(context, CGRectMake(0, 0, 1, 1));</div><div class="line">    CGContextRelease(context);</div><div class="line">    CGColorSpaceRelease(rgbColorSpace);</div><div class="line">    </div><div class="line">    for (int component = 0; component &lt; 3; component++) &#123;</div><div class="line">        components[component] = resultingPixel[component];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">//判断颜色是不是亮色</div><div class="line">- (BOOL)isLightColor:(UIColor*)clr &#123;</div><div class="line">    CGFloat components[3];</div><div class="line">    [self getRGBComponents:components forColor:clr];</div><div class="line">    SKLog(@&quot;------------%f %f %f&quot;, components[0], components[1], components[2]);</div><div class="line">    </div><div class="line">    CGFloat num = components[0] + components[1] + components[2];</div><div class="line">    if(num &lt; 150)</div><div class="line">        return NO;</div><div class="line">    else</div><div class="line">        return YES;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@end</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-016]]></title>
      <url>http://yoursite.com/2016/11/14/%E6%AF%8F%E5%91%A8%E7%83%A7%E8%84%91-016/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>给定一个长度为n的整数数组a（n&gt;0），每次操作把其中的n-1个元素加1，问最少需要多少次操作可以让数组中的所有元素相等。<br>如[1,2,3]的转换为：<br>[1,2,3]  =&gt;  [2,3,3]  =&gt;  [3,4,3]  =&gt;  [4,4,4]<br>需要三次操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">int minMoves(int* a, int n) &#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-015]]></title>
      <url>http://yoursite.com/2016/11/14/%E6%AF%8F%E5%91%A8%E7%83%A7%E8%84%91-015/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="矩阵清零"><a href="#矩阵清零" class="headerlink" title="矩阵清零"></a>矩阵清零</h3><p>给定一个MxN的矩阵，如果其中某个元素是0，则将其所在的行和列都清零。要求，原地操作，不能使用多余空间，即空间复杂度O(1)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">void SetZero( int **matrix, int m, int n)</div><div class="line">&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="最佳答案"><a href="#最佳答案" class="headerlink" title="最佳答案"></a>最佳答案</h2><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">void setZero(int **matrix, int m, int n)&#123;</div><div class="line">    </div><div class="line">    BOOL row[n]; // 行</div><div class="line">    BOOL line[m];// 列</div><div class="line">    for (int i = 0; i &lt; m; i ++) &#123;</div><div class="line">        for (int j = 0; j &lt; n; j ++) &#123;</div><div class="line">            if (matrix[i][j] == 0) &#123;</div><div class="line">                row[i] = true;</div><div class="line">                line[j] = true;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    for (int i = 0; i &lt; m; i ++) &#123;</div><div class="line">        for (int j = 0; j &lt; n; j ++) &#123;</div><div class="line">            if (row[i] || line[j]) &#123;</div><div class="line">                matrix[i][j] = 0;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-014]]></title>
      <url>http://yoursite.com/2016/11/14/%E6%AF%8F%E5%91%A8%E7%83%A7%E8%84%91-014/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="nginx按权重进行负载均衡的算法"><a href="#nginx按权重进行负载均衡的算法" class="headerlink" title="nginx按权重进行负载均衡的算法"></a>nginx按权重进行负载均衡的算法</h3><p>使用nginx时，可以给每台上游服务器指定一个权重，这样nginx会把请求按权重转发给上游服务器，如：<br>服务器A, 权重1<br>服务器B, 权重6<br>服务器C, 权重20<br>则nginx会把请求按照 1:6:20的比例分发给三台服务器。</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p>　　在介绍加权轮询算法(WeightedRound-Robin)之前，首先介绍一下轮询算法(Round-Robin)。<br>　　<br>一：轮询算法(Round-Robin)<br>　　轮询算法是最简单的一种负载均衡算法。它的原理是把来自用户的请求轮流分配给内部的服务器：从服务器1开始，直到服务器N，然后重新开始循环。<br>　　算法的优点是其简洁性，它无需记录当前所有连接的状态，所以它是一种无状态调度。<br>　<br>　　假设有N台服务器：S = {S1, S2, …, Sn}，一个指示变量i表示上一次选择的服务器ID。变量i被初始化为N-1。该算法的伪代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">　</div><div class="line">j = i;</div><div class="line">do</div><div class="line">&#123;</div><div class="line">    j = (j + 1) mod n;</div><div class="line">    i = j;</div><div class="line">    return Si;</div><div class="line">&#125; while (j != i);</div><div class="line">return NULL;</div></pre></td></tr></table></figure></p>
<p>　　轮询算法假设所有服务器的处理性能都相同，不关心每台服务器的当前连接数和响应速度。当请求服务间隔时间变化比较大时，轮询算法容易导致服务器间的负载不平衡。所以此种均衡算法适合于服务器组中的所有服务器都有相同的软硬件配置并且平均服务请求相对均衡的情况。</p>
<p>二：加权轮询算法(WeightedRound-Robin)<br>　　轮询算法并没有考虑每台服务器的处理能力，实际中可能并不是这种情况。由于每台服务器的配置、安装的业务应用等不同，其处理能力会不一样。所以，加权轮询算法的原理就是：根据服务器的不同处理能力，给每个服务器分配不同的权值，使其能够接受相应权值数的服务请求。</p>
<p>　　首先看一个简单的Nginx负载均衡配置。<br>http {<br>    upstream cluster {<br>        server a weight=1;<br>        server b weight=2;<br>        server c weight=4;<br>    }<br>    …<br>} </p>
<p>　　按照上述配置，Nginx每收到7个客户端的请求，会把其中的1个转发给后端a，把其中的2个转发给后端b，把其中的4个转发给后端c。</p>
<p>　　加权轮询算法的结果，就是要生成一个服务器序列。每当有请求到来时，就依次从该序列中取出下一个服务器用于处理该请求。比如针对上面的例子，加权轮询算法会生成序列{c, c, b, c, a, b, c}。这样，每收到7个客户端的请求，会把其中的1个转发给后端a，把其中的2个转发给后端b，把其中的4个转发给后端c。收到的第8个请求，重新从该序列的头部开始轮询。<br>　　总之，加权轮询算法要生成一个服务器序列，该序列中包含n个服务器。n是所有服务器的权重之和。在该序列中，每个服务器的出现的次数，等于其权重值。并且，生成的序列中，服务器的分布应该尽可能的均匀。比如序列{a, a, a, a, a, b, c}中，前五个请求都会分配给服务器a，这就是一种不均匀的分配方法，更好的序列应该是：{a, a, b, a, c, a, a}。<br>　　下面介绍两种加权轮询算法：</p>
<p>1：普通加权轮询算法<br>         这种算法的原理是：在服务器数组S中，首先计算所有服务器权重的最大值max(S)，以及所有服务器权重的最大公约数gcd(S)。<br>         index表示本次请求到来时，选择的服务器的索引，初始值为-1；current_weight表示当前调度的权值，初始值为max(S)。<br>         当请求到来时，从index+1开始轮询服务器数组S，找到其中权重大于current_weight的第一个服务器，用于处理该请求。记录其索引到结果序列中。<br>　　在轮询服务器数组时，如果到达了数组末尾，则重新从头开始搜索，并且减小current_weight的值：current_weight -= gcd(S)。如果current_weight等于0，则将其重置为max(S)。</p>
<p>　　该算法的实现代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">#include &lt;stdlib.h&gt;</div><div class="line">#include &lt;stdio.h&gt;</div><div class="line">#include &lt;unistd.h&gt;</div><div class="line">#include &lt;string.h&gt;</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">    int weight;</div><div class="line">    char name[2];</div><div class="line">&#125;server;</div><div class="line"></div><div class="line"></div><div class="line">int getsum(int *set, int size)</div><div class="line">&#123;</div><div class="line">    int i = 0; </div><div class="line">    int res = 0;</div><div class="line"></div><div class="line">    for (i = 0; i &lt; size; i++)</div><div class="line">        res += set[i];</div><div class="line"></div><div class="line">    return res;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int gcd(int a, int b)</div><div class="line">&#123;</div><div class="line">    int c;</div><div class="line">    while(b)</div><div class="line">    &#123;</div><div class="line">        c = b;</div><div class="line">        b = a % b;</div><div class="line">        a = c;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    return a;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int getgcd(int *set, int size)</div><div class="line">&#123;</div><div class="line">    int i = 0; </div><div class="line">    int res = set[0];</div><div class="line"></div><div class="line">    for (i = 1; i &lt; size; i++)</div><div class="line">        res = gcd(res, set[i]);</div><div class="line"></div><div class="line">    return res;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int getmax(int *set, int size)</div><div class="line">&#123;</div><div class="line">    int i = 0; </div><div class="line">    int res = set[0];</div><div class="line"></div><div class="line">    for (i = 1; i &lt; size; i++)</div><div class="line">    &#123;</div><div class="line">        if (res &lt; set[i]) res = set[i];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    return res;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">int lb_wrr__getwrr(server *ss, int size, int gcd, int maxweight, int *i, int *cw) </div><div class="line">&#123;</div><div class="line">    while (1) </div><div class="line">    &#123;</div><div class="line">        *i = (*i + 1) % size;</div><div class="line">        if (*i == 0) </div><div class="line">        &#123;</div><div class="line">            *cw = *cw - gcd;</div><div class="line">            if (*cw &lt;= 0) </div><div class="line">            &#123;</div><div class="line">                *cw = maxweight;</div><div class="line">                if (*cw == 0) </div><div class="line">                &#123;</div><div class="line">                    return -1;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        if (ss[*i].weight &gt;= *cw) </div><div class="line">        &#123;</div><div class="line">            return *i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void wrr(server *ss, int *weights, int size)</div><div class="line">&#123;</div><div class="line">    int i = 0;</div><div class="line"></div><div class="line">    int gcd = getgcd(weights, size);</div><div class="line">    int max = getmax(weights, size);</div><div class="line">    int sum = getsum(weights, size);</div><div class="line">    </div><div class="line"></div><div class="line">    int index = -1;</div><div class="line">    int curweight = 0;</div><div class="line"></div><div class="line">    for (i = 0; i &lt; sum; i++) </div><div class="line">    &#123;</div><div class="line">        lb_wrr__getwrr(ss, size, gcd, max, &amp;(index), &amp;(curweight));</div><div class="line">        printf(&quot;%s(%d) &quot;, ss[index].name, ss[index].weight);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    printf(&quot;\n&quot;);</div><div class="line">    return;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server *initServers(char **names, int *weights, int size)</div><div class="line">&#123;</div><div class="line">    int i = 0;</div><div class="line">    server *ss = calloc(size, sizeof(server));</div><div class="line"></div><div class="line">    </div><div class="line">    for (i = 0; i &lt; size; i++)</div><div class="line">    &#123;</div><div class="line">        ss[i].weight = weights[i];</div><div class="line">        memcpy(ss[i].name, names[i], 2);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    return ss;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    int i = 0;</div><div class="line">    </div><div class="line">    int weights[] = &#123;1, 2, 4&#125;;</div><div class="line">    char *names[] = &#123;&quot;a&quot;, &quot;b&quot;, &quot;c&quot;&#125;;</div><div class="line">    int size = sizeof(weights) / sizeof(int);</div><div class="line"></div><div class="line"></div><div class="line">    server *ss = initServers(names, weights, size);</div><div class="line"></div><div class="line">    printf(&quot;server is &quot;);</div><div class="line">    for (i = 0; i &lt; size; i++)</div><div class="line">    &#123;</div><div class="line">        printf(&quot;%s(%d) &quot;, ss[i].name, ss[i].weight);</div><div class="line">    &#125;</div><div class="line">    printf(&quot;\n&quot;);</div><div class="line"></div><div class="line">    printf(&quot;\nwrr sequence is &quot;);</div><div class="line">    wrr(ss, weights, size);</div><div class="line"></div><div class="line">    return;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　上面的代码中，算法的核心部分就是wrr和lb_wrr<strong>getwrr函数。在wrr函数中，首先计算所有服务器权重的最大公约数gcd，权重最大值max，以及权重之和sum。<br>　　初始时，index为-1，curweight为0，然后依次调用lb_wrr</strong>getwrr函数，得到本次选择的服务器索引index。</p>
<p>　　算法的核心思想体现在lb_wrr__getwrr函数中。以例子说明更好理解一些：对于服务器数组{a(1), b(2), c(4)}而言，gcd为1，maxweight为4。<br>　　第1次调用该函数时，i(index)为-1，cw(current_weight)为0，进入循环后，i首先被置为0，因此cw被置为maxweight。从i开始轮询服务器数组ss，第一个权重大于等于cw的服务器是c，因此，i被置为2，并返回其值。<br>　　第2次调用该函数时，i为2，cw为maxweight。进入循环后，i首先被置为0，因此cw被置为cw-gcd，也就是3。从i开始轮询服务器数组ss，第一个权重大于等于cw的服务器还是c，因此，i被置为2，并返回其值。<br>　　第3次调用该函数时，i为2，cw为3。进入循环后，i首先被置为0，因此cw被置为cw-gcd，也就是2。从i开始轮询服务器数组ss，第一个权重大于等于cw的服务器是b，因此，i被置为1，并返回其值。<br>　　第4次调用该函数时，i为1，cw为2。进入循环后，i首先被置为2，从i开始轮询服务器数组ss，第一个权重大于等于cw的服务器是c，因此，i被置为2，并返回其值。<br>　　第5次调用该函数时，i为2，cw为2。进入循环后，i首先被置为0，因此cw被置为cw-gcd，也就是1。从i开始轮询服务器数组ss，第一个权重大于等于cw的服务器是a，因此，i被置为0，并返回其值。<br>　　第6次调用该函数时，i为0，cw为1。进入循环后，i首先被置为1，从i开始轮询服务器数组ss，第一个权重大于等于cw的服务器是b，因此，i被置为1，并返回其值。<br>　　第7次调用该函数时，i为1，cw为1。进入循环后，i首先被置为2，从i开始轮询服务器数组ss，第一个权重大于等于cw的服务器是c，因此，i被置为2，并返回其值。</p>
<p>　　经过7（1+2+4）次调用之后，每个服务器被选中的次数正好是其权重值。上面程序的运行结果如下：<br>server is a(1) b(2) c(4)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wrr sequence is c(4) c(4) b(2) c(4) a(1) b(2) c(4)</div></pre></td></tr></table></figure></p>
<pre><code>如果有新的请求到来，第8次调用该函数时，i为2，cw为1。进入循环后，i首先被置为0，cw被置为cw-gcd，也就是0，因此cw被重置为maxweight。这种情况就跟第一次调用该函数时一样了。因此，7次是一个轮回，7次之后，重复之前的过程。
这背后的数学原理，自己思考了一下，总结如下：
</code></pre><p>　　current_weight的值，其变化序列就是一个等差序列：max, max-gcd, max-2gcd, …, 0(max)，将current_weight从max变为0的过程，称为一个轮回。<br>　　针对每个current_weight，该算法就是要把服务器数组从头到尾扫描一遍，将其中权重大于等于current_weight的所有服务器填充到结果序列中。扫描完一遍服务器数组之后，将current_weight变为下一个值，再一次从头到尾扫描服务器数组。<br>　　在current_weight变化过程中，不管current_weight当前为何值，具有max权重的服务器每次肯定会被选中。因此，具有max权重的服务器会在序列中出现max/gcd次（等差序列中的项数）。<br>　　更一般的，当current_weight变为x之后，权重为x的服务器，在current_weight接下来的变化过程中，每次都会被选中，因此，具有x权重的服务器，会在序列中出现x/gcd次。所以，每个服务器在结果序列中出现的次数，是与其权重成正比的，这就是符合加权轮询算法的要求了。</p>
<p>2：平滑的加权轮询<br>     上面的加权轮询算法有个缺陷，就是某些情况下生成的序列是不均匀的。比如针对这样的配置：<br>http {<br>    upstream cluster {<br>        server a weight=5;<br>        server b weight=1;<br>        server c weight=1;<br>    }<br>    …<br>} </p>
<pre><code>生成的序列是这样的：{a,a, a, a, a, c, b}。会有5个连续的请求落在后端a上，分布不太均匀。
</code></pre><p>　　在Nginx源码中，实现了一种叫做平滑的加权轮询（smooth weighted round-robin balancing）的算法，它生成的序列更加均匀。比如前面的例子，它生成的序列为{ a, a, b, a, c, a, a}，转发给后端a的5个请求现在分散开来，不再是连续的。</p>
<p>　　该算法的原理如下：<br>　　每个服务器都有两个权重变量：<br>　　a：weight，配置文件中指定的该服务器的权重，这个值是固定不变的；<br>　　b：current_weight，服务器目前的权重。一开始为0，之后会动态调整。</p>
<p>　　每次当请求到来，选取服务器时，会遍历数组中所有服务器。对于每个服务器，让它的current_weight增加它的weight；同时累加所有服务器的weight，并保存为total。<br>　　遍历完所有服务器之后，如果该服务器的current_weight是最大的，就选择这个服务器处理本次请求。最后把该服务器的current_weight减去total。</p>
<p>　　上述描述可能不太直观，来看个例子。比如针对这样的配置：<br>http {<br>    upstream cluster {<br>        server a weight=4;<br>        server b weight=2;<br>        server c weight=1;<br>    }<br>    …<br>} </p>
<p>　　按照这个配置，每7个客户端请求中，a会被选中4次、b会被选中2次、c会被选中1次，且分布平滑。我们来算算看是不是这样子的。<br>　　initial  current_weight  of a, b, c is {0, 0, 0}</p>
<p>　　通过上述过程，可得以下结论：<br>　　a：7个请求中，a、b、c分别被选取了4、2、1次，符合它们的权重值。<br>　　b：7个请求中，a、b、c被选取的顺序为a, b,a, c, a, b, a，分布均匀，权重大的后端a没有被连续选取。<br>　　c：每经过7个请求后，a、b、c的current_weight又回到初始值{0, 0,0}，因此上述流程是不断循环的。</p>
<p>　　根据该算法实现的代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line">#include &lt;stdlib.h&gt;</div><div class="line">#include &lt;stdio.h&gt;</div><div class="line">#include &lt;unistd.h&gt;</div><div class="line">#include &lt;string.h&gt;</div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">    int weight;</div><div class="line">    int cur_weight;</div><div class="line">    char name[3];</div><div class="line">&#125;server;</div><div class="line"></div><div class="line">int getsum(int *set, int size)</div><div class="line">&#123;</div><div class="line">    int i = 0; </div><div class="line">    int res = 0;</div><div class="line"></div><div class="line">    for (i = 0; i &lt; size; i++)</div><div class="line">        res += set[i];</div><div class="line"></div><div class="line">    return res;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server *initServers(char **names, int *weights, int size)</div><div class="line">&#123;</div><div class="line">    int i = 0;</div><div class="line">    server *ss = calloc(size+1, sizeof(server));</div><div class="line"></div><div class="line">    for (i = 0; i &lt; size; i++)</div><div class="line">    &#123;</div><div class="line">        ss[i].weight = weights[i];</div><div class="line">        memcpy(ss[i].name, names[i], 3);</div><div class="line">        ss[i].cur_weight = 0;</div><div class="line">    &#125;</div><div class="line">    return ss;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int getNextServerIndex(server *ss, int size)</div><div class="line">&#123;</div><div class="line">    int i ;</div><div class="line">    int index = -1;</div><div class="line">    int total = 0;</div><div class="line"></div><div class="line">    for (i = 0; i &lt; size; i++)</div><div class="line">    &#123;</div><div class="line">        ss[i].cur_weight += ss[i].weight;</div><div class="line">        total += ss[i].weight;</div><div class="line"></div><div class="line">        if (index == -1 || ss[index].cur_weight &lt; ss[i].cur_weight)</div><div class="line">        &#123;</div><div class="line">            index = i;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ss[index].cur_weight -= total;</div><div class="line">    return index;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void wrr_nginx(server *ss, int *weights, int size)</div><div class="line">&#123;</div><div class="line">    int i = 0;</div><div class="line">    int index = -1;</div><div class="line">    int sum = getsum(weights, size);</div><div class="line"></div><div class="line">    for (i = 0; i &lt; sum; i++) </div><div class="line">    &#123;</div><div class="line">        index = getNextServerIndex(ss, size);</div><div class="line">        printf(&quot;%s(%d) &quot;, ss[index].name, ss[index].weight);</div><div class="line">    &#125;</div><div class="line">    printf(&quot;\n&quot;);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    int i = 0;</div><div class="line">    int weights[] = &#123;4, 2, 1&#125;;</div><div class="line">    char *names[] = &#123;&quot;a&quot;, &quot;b&quot;, &quot;c&quot;&#125;;</div><div class="line">    int size = sizeof(weights) / sizeof(int);</div><div class="line"></div><div class="line">    server *ss = initServers(names, weights, size);</div><div class="line"></div><div class="line">    printf(&quot;server is &quot;);</div><div class="line">    for (i = 0; i &lt; size; i++)</div><div class="line">    &#123;</div><div class="line">        printf(&quot;%s(%d) &quot;, ss[i].name, ss[i].weight);</div><div class="line">    &#125;</div><div class="line">    printf(&quot;\n&quot;);</div><div class="line"></div><div class="line">    printf(&quot;\nwrr_nginx sequence is &quot;);</div><div class="line">    wrr_nginx(ss, weights, size);</div><div class="line"></div><div class="line">    return;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<pre><code>上述代码的运行结果如下：
</code></pre><p>server is a(4) b(2) c(1)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">wrr_nginx sequence is a(4) b(2) a(4) c(1) a(4) b(2) a(4)</div></pre></td></tr></table></figure></p>
<pre><code>如果服务器配置为：{a(5),b(1), c(1)}，则运行结果如下：
</code></pre><p>server is a(5) b(1) c(1)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">wrr_nginx sequence is a(5) a(5) b(1) a(5) c(1) a(5) a(5)</div></pre></td></tr></table></figure></p>
<pre><code>可见，该算法生成的序列确实更加均匀。

该算法背后的数学原理，实在没想出来，google也没查到相关论证……，等待后续查证了。
</code></pre><p>三：健康检查<br>　　负载均衡算法，一般要伴随健康检查算法一起使用。健康检查算法的作用就是对所有的服务器进行存活和健康检测，看是否需要提供给负载均衡做选择。如果一台机器的服务出现了问题，健康检查就会将这台机器从服务列表中去掉，让负载均衡算法看不到这台机器的存在。<br>　　具体在加权轮询算法中，当健康检查算法检测出某服务器的状态发生了变化，比如从UP到DOWN，或者反之时，就会更新权重，重新计算结果序列。</p>
<p>参考：<br><a href="http://kb.linuxvirtualserver.org/wiki/Weighted_Round-Robin_Scheduling" target="_blank" rel="external">http://kb.linuxvirtualserver.org/wiki/Weighted_Round-Robin_Scheduling</a><br><a href="http://ialloc.org/posts/2014/11/14/ngx-notes-module-http-sticky/" target="_blank" rel="external">http://ialloc.org/posts/2014/11/14/ngx-notes-module-http-sticky/</a><br><a href="http://blog.csdn.net/zhangskd/article/details/50194069" target="_blank" rel="external">http://blog.csdn.net/zhangskd/article/details/50194069</a><br>转载：<a href="http://m.blog.csdn.net/article/details?id=52076997" target="_blank" rel="external">http://m.blog.csdn.net/article/details?id=52076997</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-013]]></title>
      <url>http://yoursite.com/2016/11/14/%E6%AF%8F%E5%91%A8%E7%83%A7%E8%84%91-013/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="字符排序"><a href="#字符排序" class="headerlink" title="字符排序"></a>字符排序</h3><p>一个字符串中只包含数字0-9的英文单词（即：zero, one, two….），但这个字符串的字符顺序被打乱了，请按从小到大的顺序，输出这个字符串的数字形式。<br>例如：<br>owoztneoer -&gt; 012<br>owozzteneroero -&gt; 0012<br>fviefuro -&gt; 45<br>函数原型（输入字符串保证可以正确转换）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">char* digits( const char* s )</div><div class="line">&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-012]]></title>
      <url>http://yoursite.com/2016/11/14/%E6%AF%8F%E5%91%A8%E7%83%A7%E8%84%91-012/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="抽奖算法"><a href="#抽奖算法" class="headerlink" title="抽奖算法"></a>抽奖算法</h3><p>实现抽奖算法，使奖品出现的概率符合指定的值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">// 奖品</div><div class="line">struct prize</div><div class="line">&#123;</div><div class="line"> double possibility;   // 中奖概率, 1 代表 100%</div><div class="line">&#125;;</div><div class="line">// 这是要实现的函数，返回摇奖结果的索引</div><div class="line">int draw( prize* prizes, int n )</div><div class="line">&#123;</div><div class="line"> return -1;</div><div class="line">&#125;</div><div class="line">// 用这个函数进行测试</div><div class="line">void test()</div><div class="line">&#123;</div><div class="line"> prize prizes[] = &#123;</div><div class="line">  &#123; 0.6 &#125;,</div><div class="line">  &#123; 0.000001 &#125;,</div><div class="line">  &#123; 0.000002 &#125;,</div><div class="line">  &#123; 0.05 &#125;,</div><div class="line">  &#123; 0.2 &#125;,</div><div class="line">  &#123; 0 &#125;,</div><div class="line">  &#123; 0.1 &#125;,</div><div class="line">  &#123; 0.0003 &#125;,</div><div class="line">  &#123; 0.01 &#125;,</div><div class="line">  &#123; 0.036 &#125;,</div><div class="line">  &#123; 0.003697 &#125;,</div><div class="line"> &#125;;</div><div class="line"> const int len = sizeof(prizes) / sizeof(prizes[0]);</div><div class="line"> int count[len] = &#123;0&#125;;</div><div class="line"> for( int i = 0; i &lt; 1000 * 10000; i++ )</div><div class="line"> &#123;</div><div class="line">  int n = draw( prizes, len );</div><div class="line">  if( n != -1 )</div><div class="line">   count[n]++;</div><div class="line"> &#125;</div><div class="line"> for( int i = 0; i &lt; len; i++ )</div><div class="line">  printf(&quot;%d\n&quot;, count[i]);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><pre><code>
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-010]]></title>
      <url>http://yoursite.com/2016/09/26/%E6%AF%8F%E5%91%A8%E7%83%A7%E8%84%91-010/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="整数替换"><a href="#整数替换" class="headerlink" title="整数替换"></a>整数替换</h3><p>对一个正整数n可以执行如下操作：</p>
<ol>
<li>如果 n 是偶数，把它替换为 n / 2</li>
<li>如果 n 是奇数，可以把它替换为 n - 1 或 n + 1</li>
</ol>
<p>求最少需要多少步可以把 n 变成 1。</p>
<p>例如：</p>
<p>n = 8， 8-&gt;4-&gt;2-&gt;1，需要3步</p>
<p>n = 7， 7 -&gt; 8 -&gt; 4 -&gt; 2 -&gt; 1 或 7 -&gt; 6 -&gt; 3 -&gt; 2 -&gt; 1，两种方法都需要4步</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">int replace( int n )</div><div class="line">&#123;</div><div class="line">    // 返回把n变成1需要的最少步数</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">int replace(int n)&#123;</div><div class="line">    int count = 0;</div><div class="line">    while(n &gt; 1)</div><div class="line">    &#123;</div><div class="line">        if(n % 2 == 0)            // n % 4等于0或2</div><div class="line">            n &gt;&gt;= 1;</div><div class="line">        else if(n == 3)</div><div class="line">            n--;</div><div class="line">        else</div><div class="line">            n += (n % 4 - 2);     // n % 4等于1或3</div><div class="line">        count++;</div><div class="line">    &#125;</div><div class="line">    return count;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-011]]></title>
      <url>http://yoursite.com/2016/09/26/%E6%AF%8F%E5%91%A8%E7%83%A7%E8%84%91-011/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="分金子"><a href="#分金子" class="headerlink" title="分金子"></a>分金子</h3><p>海盗头目给部下分金子，他让部下随机站成一排，然后按以下规则发金子：</p>
<ol>
<li><p>每人至少一块</p>
</li>
<li><p>如果一个海盗的贡献值大于与他相邻的海盗，此海盗分到的金子必须多于与他相邻的海盗</p>
</li>
</ol>
<p>求：头目至少要发出去多少块金子</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">int gold( int* scores, int n ) // scores是每个海盗的贡献值（不必考虑负数的情况），n是海盗的数量</div><div class="line">&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>时间复杂度O(n) 空间复杂度O(1)</p>
<h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">int gold( int* s, int n )</div><div class="line">&#123;</div><div class="line">    int c = 1, a = 1, d = 1;</div><div class="line">    for( int i = 1; i &lt; n; ++i )</div><div class="line">    &#123;</div><div class="line">        if( s[i] &lt; s[i-1] )</div><div class="line">        &#123;</div><div class="line">            ++d;</div><div class="line">            continue;</div><div class="line">        &#125;</div><div class="line">        c += d * (d - 1) / 2 + (d &gt; a ? d - a : 0);</div><div class="line">        if( s[i] == s[i-1] )</div><div class="line">            a = 0, d = 1;</div><div class="line">        else if( d &gt; 1 )</div><div class="line">            a = 1, d = 1;</div><div class="line">        c += ++a;</div><div class="line">    &#125;</div><div class="line">    return c + d * (d - 1) / 2 + (d &gt; a ? d - a : 0);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">int gold( int* s, int n )</div><div class="line">&#123;</div><div class="line">    int c = 1, a = 1, d = 1;</div><div class="line">    for( int i = 1; i &lt; n; ++i )</div><div class="line">    &#123;</div><div class="line">        if( s[i] &gt; s[i-1] ) // in a ascending sequence</div><div class="line">        &#123;</div><div class="line">            if( d &gt; 1 ) // a descending sequence ended here?</div><div class="line">            &#123;</div><div class="line">                // add gold for the descending sequence but exclude the first pirate,</div><div class="line">                // the formula is simplified from &apos;((d - 1) + 1) * (d - 1) / 2&apos;</div><div class="line">                c += d * (d - 1) / 2;</div><div class="line">                // adjust gold for the last pirate in previous ascending sequence if needed,</div><div class="line">                // note he is also the first pirate in the descending sequence</div><div class="line">                if( d &gt; a )</div><div class="line">                    c += d - a;</div><div class="line">                a = d = 1; // reset length of ascending &amp; descending sequence</div><div class="line">            &#125;</div><div class="line">            ++a; // update length of ascending sequence</div><div class="line">            c += a; // add gold for current pirate</div><div class="line">        &#125;</div><div class="line">        else if( s[i] == s[i-1] )</div><div class="line">        &#123;</div><div class="line">            // same as the start of ascending sequence,</div><div class="line">            // add gold for the descending sequence if this end a descending sequence,</div><div class="line">            // note this will be &apos;0&apos; if &apos;d&apos; is 1</div><div class="line">            c += d * (d - 1) / 2;</div><div class="line">            if( d &gt; a )</div><div class="line">                c += d - a;</div><div class="line">            // add gold for current pirate, always &apos;1&apos;</div><div class="line">            ++c;</div><div class="line">            a = d = 1;  // reset length of ascending &amp; descending sequence</div><div class="line">        &#125;</div><div class="line">        else</div><div class="line">        &#123;</div><div class="line">            ++d; // update the length of descending sequence</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    c += d * (d - 1) / 2; // handle the last descending sequence</div><div class="line">    if( d &gt; a )</div><div class="line">        c += d - a;</div><div class="line">    return c;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-009]]></title>
      <url>http://yoursite.com/2016/09/26/%E6%AF%8F%E5%91%A8%E7%83%A7%E8%84%91-009/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="子序列"><a href="#子序列" class="headerlink" title="子序列"></a>子序列</h3><p>两个字符串a，b，判断a是否是b的子序列。</p>
<p>子序列是指a中的每个字符在b中都存在，且a中任意两个字符的先后顺序与它们在b中的先后顺序完全相同，但b中的某些字符可以不在a中出现。<br>如：</p>
<p>   a = “abc”    b = “aabbcc”   true</p>
<p>   a = “aabcc”  b = “aabbcc”  true</p>
<p>   a = “acb”   b = “aabbcc”   false</p>
<p>   a = “abd”   b = “aabbcc”   false</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bool isSubsequence(const char* a, const char* b) &#123;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="最佳答案"><a href="#最佳答案" class="headerlink" title="最佳答案"></a>最佳答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">bool isSubsequence( char* a, char* b )</div><div class="line">&#123;</div><div class="line">    for( ; *a != 0; ++a, ++b )</div><div class="line">        for( ; *a != *b; ++b )</div><div class="line">            if( *b == 0 )</div><div class="line">                return false;</div><div class="line">    return true;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line">BOOL isSubsequence(const char * a, const char * b);</div><div class="line">BOOL isSubsequence(const char * a, const char * b)&#123;</div><div class="line">    int j = 0;</div><div class="line">    BOOL flag = YES;</div><div class="line">    for (int i = 0; i &lt; strlen(a); i ++) &#123;</div><div class="line">        for (;j &lt; strlen(b);) &#123;</div><div class="line">            if (a[i]^b[j]) &#123;</div><div class="line">                flag = NO;</div><div class="line">                break;</div><div class="line">            &#125;else&#123;</div><div class="line">                flag = YES;</div><div class="line">                j++;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return flag;</div><div class="line">&#125;</div><div class="line">int main(int argc, const char * argv[]) &#123;</div><div class="line">    @autoreleasepool &#123;</div><div class="line">        char a[] = &quot;abc&quot;;</div><div class="line">        char b[] = &quot;aabbcc&quot;;</div><div class="line">        printf(&quot;%d&quot;,isSubsequence(a, b));</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-008]]></title>
      <url>http://yoursite.com/2016/09/26/%E6%AF%8F%E5%91%A8%E7%83%A7%E8%84%91-008/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="计算x的n次方"><a href="#计算x的n次方" class="headerlink" title="计算x的n次方"></a>计算x的n次方</h3><p>n个连续的整数被打乱顺序放在一个数组中，其中有一个是重复的，请用最快的方法找出这个数字</p>
<p>注意：除了效率，还要考虑各种边界条件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">函数原型：</div><div class="line">double myPow( double x, int n )</div><div class="line">&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="最佳答案"><a href="#最佳答案" class="headerlink" title="最佳答案"></a>最佳答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">```</div><div class="line">## 答案</div></pre></td></tr></table></figure>
<p>```</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-007]]></title>
      <url>http://yoursite.com/2016/09/26/%E6%AF%8F%E5%91%A8%E7%83%A7%E8%84%91-007/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="有没有环"><a href="#有没有环" class="headerlink" title="有没有环"></a>有没有环</h3><p>给定一个单向链表，判断其中是否有环，即类似下面的形式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">A -&gt; B -&gt; C -&gt; D -&gt; E -&gt; F</div><div class="line">               |         |</div><div class="line">               I &lt;- H &lt;- G</div></pre></td></tr></table></figure>
<p>链表结点定义：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">struct ListNode</div><div class="line">&#123;</div><div class="line">    ListNode* next;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>函数原型：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">bool hasCycle( const ListNode* head )</div><div class="line">&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="最佳答案"><a href="#最佳答案" class="headerlink" title="最佳答案"></a>最佳答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">```</div><div class="line">## 答案</div></pre></td></tr></table></figure>
<p>#import <foundation foundation.h=""><br>typedef struct listNode{<br>    struct listNode <em>next;<br>}list;<br>bool hasCycle(list</em> head);<br>bool hasCycle(list<em> head)<br>{<br>    list </em>fast = head;<br>    list <em>slow = head;<br>    while (fast &amp;&amp; fast -&gt; next) {<br>        fast = fast -&gt; next -&gt; next;<br>        slow = slow -&gt; next;<br>        if (fast == slow) {<br>            return false;<br>        }<br>    }<br>    return true;<br>};<br>int main(int argc, const char </em> argv[]) {<br>    @autoreleasepool {</foundation></p>
<pre><code>}
return 0;
</code></pre><p>}<br>```</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-006]]></title>
      <url>http://yoursite.com/2016/09/26/%E6%AF%8F%E5%91%A8%E7%83%A7%E8%84%91-006/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="拼接字符串"><a href="#拼接字符串" class="headerlink" title="拼接字符串"></a>拼接字符串</h3><p>给定A,B两个字符串，串中的字符全都是小写英文字母（即a -&gt; z）。判断能否只使用A串中的字符拼出B串，A串中的每个字符只准使用一次。例如：</p>
<p>A = “aaab”    B = “aaa”     true</p>
<p>A = “aabb”    B= “aaa”      false</p>
<p>A = “aaab”    B = “abaa”   true</p>
<p>A = “aaab”    B = “aaac”   false</p>
<p>函数原型：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">bool canConstruct(const char* A, const char* B)</div><div class="line"></div><div class="line">&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="最佳答案"><a href="#最佳答案" class="headerlink" title="最佳答案"></a>最佳答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">// 计算每个字母出现的次数，正向加法，逆向加法。小于0证明B比A中同样的字母少</div><div class="line">BOOL canConstruct(const char * A, const char * B);</div><div class="line">BOOL canConstruct(const char * A, const char * B)&#123;</div><div class="line">    </div><div class="line">    int a[26] = &#123;&#125;;</div><div class="line">    for (int i = 0; i &lt; strlen(A); i ++) &#123;</div><div class="line">        a[A[i] - &apos;a&apos;] += 1;</div><div class="line">    &#125;</div><div class="line">    for (int j = 0; j &lt; strlen(B); j ++) &#123;</div><div class="line">        a[B[j] - &apos;a&apos;] -= 1;</div><div class="line">        if (a[B[j] - &apos;a&apos;] &lt; 0) &#123;</div><div class="line">            return false;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return true;</div><div class="line">&#125;</div><div class="line">int main(int argc, const char * argv[]) &#123;</div><div class="line">    @autoreleasepool &#123;</div><div class="line">        char a[] = &quot;aaab&quot;;</div><div class="line">        char b[] = &quot;aaca&quot;;</div><div class="line">        printf(&quot;%d&quot;,canConstruct(a, b));</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-005]]></title>
      <url>http://yoursite.com/2016/09/26/%E6%AF%8F%E5%91%A8%E7%83%A7%E8%84%91-005/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="寻找单身狗"><a href="#寻找单身狗" class="headerlink" title="寻找单身狗"></a>寻找单身狗</h3><p>一位单身人士混入了一个只允许情侣参加的聚会，已知每对情侣身上都贴了相同的号码，并且不同情侣的号码互不相同，单身人士身上的号码也是唯一的，找到他/她。</p>
<p>C函数原型：返回只出现一次的号码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">int FindSignle( int* numbers, int n )</div><div class="line">&#123;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>例如：对输入a[1,1,2,9,2,3,3,4,6,6,5,7,5,9,7,8,8]，返回4</p>
<h2 id="最佳答案"><a href="#最佳答案" class="headerlink" title="最佳答案"></a>最佳答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">int FindSignle(int * numbers, int n)&#123;</div><div class="line">    </div><div class="line">    int r = a[0];</div><div class="line">    for (int i = 1 ; i &lt; n; i ++) &#123;</div><div class="line">        r ^= a[i];</div><div class="line">    &#125;</div><div class="line">    return r;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line">int FindSignle(int * numbers, int n);</div><div class="line">int FindSignle(int * numbers, int n)&#123;</div><div class="line">    </div><div class="line">    int maxNum = 0;</div><div class="line">    int sumNum1 = 0;</div><div class="line">    int sumNum2 = 0;</div><div class="line">    for (int i = 0 ; i &lt; n; i ++) &#123;</div><div class="line">        if (maxNum &lt; numbers[i]) &#123;</div><div class="line">            maxNum = numbers[i];</div><div class="line">            sumNum1 = sumNum1 + maxNum;</div><div class="line">        &#125;</div><div class="line">        sumNum2 = sumNum2 + numbers[i];</div><div class="line">    &#125;</div><div class="line">    return (sumNum1 * 2 - sumNum2);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main(int argc, const char * argv[]) &#123;</div><div class="line">    @autoreleasepool &#123;</div><div class="line">        int a[] = &#123;1,1,2,9,2,3,3,4,6,6,5,7,5,9,7,8,8&#125;;</div><div class="line">        int n = sizeof(a) / sizeof(a[0]);</div><div class="line">        BOOL exChangeFlag = NO;</div><div class="line">        for(int i = 0 ; i &lt; n - 1; i ++)&#123;</div><div class="line">            exChangeFlag = NO;</div><div class="line">            for(int j = 0 ; j &lt; n - 1 - i ; j ++)&#123;</div><div class="line">                if(a[j] &gt; a[j+1])&#123;</div><div class="line">                    exChangeFlag = YES;</div><div class="line">                    int temp = a[j];</div><div class="line">                    a[j] = a[j+1];</div><div class="line">                    a[j+1] = temp;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            if(exChangeFlag == NO)&#123;</div><div class="line">                printf(&quot;第%d趟提前结束\n&quot;,i);</div><div class="line">                break;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        printf(&quot;%d\n&quot;,FindSignle(a, n));</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-004]]></title>
      <url>http://yoursite.com/2016/09/26/%E6%AF%8F%E5%91%A8%E7%83%A7%E8%84%91-004/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="重复的数字"><a href="#重复的数字" class="headerlink" title="重复的数字"></a>重复的数字</h3><p>n个连续的整数被打乱顺序放在一个数组中，其中有一个是重复的，请用最快的方法找出这个数字</p>
<h2 id="最佳答案"><a href="#最佳答案" class="headerlink" title="最佳答案"></a>最佳答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><pre><code>
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-003]]></title>
      <url>http://yoursite.com/2016/09/26/%E6%AF%8F%E5%91%A8%E7%83%A7%E8%84%91-003/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="重复的数字"><a href="#重复的数字" class="headerlink" title="重复的数字"></a>重复的数字</h3><p>n个连续的整数被打乱顺序放在一个数组中，其中有一个是重复的，请用最快的方法找出这个数字</p>
<h2 id="最佳答案"><a href="#最佳答案" class="headerlink" title="最佳答案"></a>最佳答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><pre><code>
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-002]]></title>
      <url>http://yoursite.com/2016/09/26/%E6%AF%8F%E5%91%A8%E7%83%A7%E8%84%91-002/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="螺旋二维数组"><a href="#螺旋二维数组" class="headerlink" title="螺旋二维数组"></a>螺旋二维数组</h3><p>输入：正整数N</p>
<p>输出：N x N的二维数组，要求，数组元素从1到NxN螺旋排列，如N=5时，输出如下结果：</p>
<p>1   2   3   4  5</p>
<p>16 17 18 19  6</p>
<p>15 24 25 20  7</p>
<p>14 23 22 21  8 </p>
<p>13 12 11 10  9</p>
<h2 id="最佳答案"><a href="#最佳答案" class="headerlink" title="最佳答案"></a>最佳答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">#import &lt;Foundation/Foundation.h&gt;</div><div class="line"></div><div class="line">#define M 100</div><div class="line">#define N 100</div><div class="line">/*</div><div class="line"> 填充方法，归纳每一行的数据规律</div><div class="line"> k为当前放下的数字，一边走一边放</div><div class="line"> 按照摆放数据的过程，逐层分别处理每圈的上下左右方的数据</div><div class="line"> */</div><div class="line">int main(int argc, const char * argv[]) &#123;</div><div class="line">    </div><div class="line">    int i, j, a[100][100]=&#123;0&#125;, n, k = 1;</div><div class="line">    printf(&quot;please input a number n:&quot;);</div><div class="line">    while(scanf(&quot;%d&quot;, &amp;n)!=EOF)&#123;</div><div class="line">        k = 1;</div><div class="line">        for (i = 1; i &lt;= n / 2; ++ i)&#123;</div><div class="line">            for (j = i; j &lt;= n - i; ++ j) /* 左侧 */</div><div class="line">                a[i][j] = k ++;</div><div class="line">            for (j = i; j &lt;= n - i; ++ j) /* 下方 */</div><div class="line">                a[j][n + 1 - i] = k ++;</div><div class="line">            for (j = n - i + 1; j &gt;= i + 1; j = j - 1) /* 右侧 */</div><div class="line">                a[n + 1 - i][j] = k ++;</div><div class="line">            for (j = n - i + 1; j &gt;= i + 1; j = j - 1) /* 上方 */</div><div class="line">                a[j][i] = k ++;</div><div class="line">        &#125;</div><div class="line">        if(n != 1)&#123;</div><div class="line">            for (i = 1; i &lt;= n; ++ i)&#123;</div><div class="line">                for (j = 1; j &lt;= n; ++ j)</div><div class="line">                    printf(&quot;%5d&quot;, a[i][j]); printf(&quot;\n&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        else</div><div class="line">            printf(&quot;%5d\n&quot;,n);</div><div class="line">        printf(&quot;please input a number n:&quot;);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[每周烧脑-001]]></title>
      <url>http://yoursite.com/2016/09/26/algorithm-1/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h3><p>最大值、最小值、平均值和步进值四个属性，随机生成符合下列条件的一个数:</p>
<ol>
<li>这个数字不能小于最小值</li>
<li>这个数字不能大于最大值</li>
<li>这个数字与最小值的差必须是步进的整数倍</li>
<li>当生成多个随机数后，所有这些数字的平均趋近于平均值</li>
</ol>
<h2 id="最佳答案"><a href="#最佳答案" class="headerlink" title="最佳答案"></a>最佳答案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">#include &lt;stdio.h&gt;</div><div class="line">#include &lt;stdlib.h&gt;</div><div class="line">#include &lt;time.h&gt;</div><div class="line">double avgrand( double min, double max, double avg, double step )</div><div class="line">&#123;</div><div class="line">    int nMin = (int)(min * 200 + 0.1);</div><div class="line">    int nStep = (int)(step * 200 + 0.1);</div><div class="line">    int nMax = ((int)(max * 200 + 0.1) - nMin) / nStep * nStep;</div><div class="line">    int nAvg = (int)(avg * 200 + 0.1) - nMin;</div><div class="line">    </div><div class="line">    int r = rand() % (nMax + 1);</div><div class="line">    if( r &lt; nAvg )</div><div class="line">        r = rand() % (nMax - nAvg) + nAvg + 1;</div><div class="line">    else if( r &gt; nAvg )</div><div class="line">        r = rand() % nAvg;</div><div class="line"></div><div class="line">    r = (r + nStep / 2) / nStep * nStep;</div><div class="line"></div><div class="line">    return (double)(r + nMin) / 200.0;</div><div class="line">&#125;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    const int count = 10000;</div><div class="line">    double min = 5.0, max = 9.0, avg = 8.0, step = 0.2, sum = 0.0;</div><div class="line"></div><div class="line">    srand( time(NULL) );</div><div class="line">    for( int i = 0; i &lt; count; ++i )</div><div class="line">    &#123;</div><div class="line">        double r = avgrand( min, max, avg, step );</div><div class="line">        if( i &lt; 200 )</div><div class="line">        &#123;</div><div class="line">            if( i % 20 == 0 )</div><div class="line">                printf(&quot;\n&quot;);</div><div class="line">            printf(&quot;%5.2f&quot;, r);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        if( r &lt; min )</div><div class="line">            printf(&quot;\ntoo small %5.2f\n&quot;, r);</div><div class="line">        else if( r &gt; max )</div><div class="line">            printf(&quot;\ntoo big %5.2f\n&quot;, r);</div><div class="line">            </div><div class="line">        sum += r;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    printf(&quot;\naverage is: %f\n&quot;, sum / count);</div><div class="line">    </div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://yoursite.com/2016/09/09/hello-world/</url>
      <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>当Node.js和Git都安装好后就可以正式安装Hexo了，终端执行如下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo npm install -g hexo</div></pre></td></tr></table></figure>
<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>终端cd到一个你选定的目录，执行hexo init命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init blog</div></pre></td></tr></table></figure>
<p>blog是你建立的文件夹名称。cd到blog文件夹下，执行如下命令，安装npm：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install</div></pre></td></tr></table></figure>
<p>执行如下命令，开启hexo服务器：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s</div></pre></td></tr></table></figure>
<p>此时，浏览器中打开网址<a href="http://localhost:4000，能看到如下页面：" target="_blank" rel="external">http://localhost:4000，能看到如下页面：</a></p>
<h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="创建新的文章"><a href="#创建新的文章" class="headerlink" title="创建新的文章"></a>创建新的文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new &quot;My New Post&quot;</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="运行本地服务"><a href="#运行本地服务" class="headerlink" title="运行本地服务"></a>运行本地服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="清除缓存文件-db-json-和已生成的静态文件-public"><a href="#清除缓存文件-db-json-和已生成的静态文件-public" class="headerlink" title="清除缓存文件 (db.json) 和已生成的静态文件 (public)"></a>清除缓存文件 (db.json) 和已生成的静态文件 (public)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div></pre></td></tr></table></figure>
<h3 id="生成缓存和静态文件"><a href="#生成缓存和静态文件" class="headerlink" title="生成缓存和静态文件"></a>生成缓存和静态文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="重新部署到服务器"><a href="#重新部署到服务器" class="headerlink" title="重新部署到服务器"></a>重新部署到服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
